{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","FORMS","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","chara","lv","mc","dragon","c","unionIcon","union","toLocaleString","minimumIntegerDigits","useGrouping","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","position","top","left","zIndex","amuletAbIcon","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","mcIconMaxed","mcIconAmulet","circleIcon","backgroundColor","borderRadius","circleIconMaxed","circleIcon0","circleIcon1","circleIcon2","circleIcon3","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","mcTab","minWidth","mcTabpanel","display","gridTemplateColumns","mcTabUb","gridColumnStart","gridColumnEnd","mcDeco","mcDecoUb5","Flame","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","MC_SVG_PATHS","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","doneCharaHave","unbind","undefined","ub","no","Rarity","Array","from","length","_","i","MaxLimitBreak","MC_STATIC","10101","10102","10103","10601","10602","10701","10801","MC_PIECE_NAME","10201","10301","10302","10303","10401","10402","10501","MC50_RANGE","MC70_RANGE","CharaListingItem","id","category","updateHaving","deleteHaving","React","useState","open","setOpen","handleClose","mcInfo","ManaCircle","MCName","createThisHaving","deleteThisHaving","mcNum","maxManaCircle","rarity","Math","max","min","mcRanges","mcIdx","setMcIdx","handleMCCheck","e","seq","parseInt","target","split","slice","mcItem","newUb","Hierarchy","newNo","No","index","indexOf","splice","push","handleUbCheck","ubSeq","preventDefault","Box","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","checked","icon","src","checkedIcon","label","Typography","DialogContent","dividers","Tabs","value","onChange","newMcIdx","indicatorColor","textColor","variant","scrollButtons","map","mcRange","floor","Tab","key","aria-controls","component","role","hidden","dir","piece","Piece","img","txt","ExAbility","Step","step","DefaultLv","FS","abi","Abilities","si","Skills","Story","MCPieceIcon","ubItem","includes","ubChecked","getUbChecked","d","fill","Tooltip","aria-label","placement","popper","seqMcTxt","nodeChecked","getMCChecked","mcDecoPath","seqR","Fragment","standardCardIcon","count","DragonListingItem","cardIconFn","setEditing","dh","nextC","mub","r","container","justify","TextField","TextLabel","COUNT","onInput","isNaN","focus","fullWeaponHave","build","WeaponBuild","Build","b","Object","keys","Passive","p","doneWeaponHave","fullWeapon","unbindReq","UnbindReq","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","newHave","prereqs","setBuildValues","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","handleAbilityCheck","levelData","Level","Mats","WeaponLevel","doneHave","bi","WeaponSeries","Series","buildInfo","buildpiece","buildvalue","gutterBottom","Slider","valueLabelDisplay","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","MaterialSummaryItem","m","align","fortMaxNum","NameEN","endsWith","FortListingItem","maxHave","values","Detail","maxLv","maxNum","makeLevelChange","fullWidth","currentLevel","doneAmuletHave","fullCopies","AmuletBuild","fullAmuletHave","AmuletListingItem","NoRefine","BaseId","AmuletLevel","AbIcon","Union","marginTop","sortSelect","radioGroup","marginLeft","radioTitle","radioRoot","radioIcon","unchecked","opacity","availButton","availChecks","paddingTop","costTitle","minHeight","verticalAlign","fullToggle","float","WeaponMaterialSummation","having","visible","fullAgito","setFullAgito","isFullAgito","toggleOpen","event","type","totalCost","totalMats","currHave","bs","Cost","currLevelMats","doneLevelMats","diff","sorted","sort","a","Material","SortId","MATS","anchor","spacing","alignItems","wrap","FortMaterialSummation","totalTime","Fort","currIter","curLv","detail","Time","style","AmuletMaterialSummation","setFullCopies","isFullCopies","Amulet","entryMats","tm","CharaMaterialSummation","totalCosts","Mana","Eldwater","Chara","clbInfo","CharaLimitBreak","LimitBreak","useGrow","GrowEnd","Date","now","Grow","calcNodeMats","n","mcEle","Ele","MCEle","ListingControls","minRarity","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","filters","radioFilters","availabilities","series","storeKey","handleBoolCheckFilters","radioFilterValues","res","offset","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","ifHave","bind","this","HAVE","ifNotHave","NOT_HAVE","ifNotMaxLevel","NOT_MAXED","rf","FormLabel","disabled","RadioGroup","toString","row","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","byType","Type","byForm","Form","CheckFilterMethods","loadLocalObj","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","storeSortKey","setSort","storeSortOrderKey","setOrder","setHaving","changes","newHaving","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","newFilters","total","halidom","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","newIdx","ADVENTURERS","DRAGONS","AMULETS","FACILITY","Availabilities","Dragon","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de784177.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const FORMS = {\r\n    0: 'Form0',\r\n    2: 'FormB',\r\n    1: 'FormA',\r\n    3: 'FormC',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    chara: {\r\n        3: { lv: 60, mc: 30 },\r\n        4: { lv: 70, mc: 40 },\r\n        5: { lv: 80, mc: 40 }\r\n    },\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    }\r\n}\r\n\r\nexport const unionIcon = (union) => (`Icon_Union_${union.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}`);\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport ManaCircle from '../data/manacircle.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json'\r\n\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, unionIcon } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    unionIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 48,\r\n        zIndex: 1\r\n    },\r\n    amuletAbIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 6,\r\n        left: 28,\r\n        zIndex: 2\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 3,\r\n        zIndex: 2\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#ffcc00'\r\n    },\r\n    mcIconAmulet: {\r\n        top: 25,\r\n    },\r\n    circleIcon: {\r\n        backgroundColor: 'gray',\r\n        textAlign: 'center',\r\n        width: 19,\r\n        height: 19,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        borderRadius: 50,\r\n        top: 5,\r\n    },\r\n    circleIconMaxed: {\r\n        color: '#48D1CC'\r\n    },\r\n    circleIcon0: {\r\n        left: 4\r\n    },\r\n    circleIcon1: {\r\n        left: 25,\r\n    },\r\n    circleIcon2: {\r\n        left: 46,\r\n    },\r\n    circleIcon3: {\r\n        left: 67,\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    mcTab: {\r\n        minWidth: 20,\r\n    },\r\n    mcTabpanel: {\r\n        display: 'grid',\r\n        margin: '0 auto',\r\n        gridTemplateColumns: 'repeat(5, 1fr)',\r\n        textAlign: 'center',\r\n        width: 'fit-content',\r\n    },\r\n    mcTabUb: {\r\n        position: 'relative',\r\n        gridColumnStart: 1,\r\n        gridColumnEnd: 6,\r\n    },\r\n    mcDeco: {\r\n        position: 'absolute',\r\n        zIndex: 0,\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n    mcDecoUb5: {\r\n        width: 180,\r\n        left: 0,\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nconst MC_SVG_PATHS = {\r\n    d39: 'M0 25 60 25 60 35 0 35Z',\r\n    d36: 'M60 25 25 25 25 60 35 60 35 35 60 35Z',\r\n    d69: 'M0 25 35 25 35 60 25 60 25 35 0 35Z',\r\n    d03: 'M60 35 25 35 25 0 35 0 35 25 60 25Z',\r\n    d09: 'M0 35 35 35 35 0 25 0 25 25 0 25Z',\r\n    d039: 'M0 25 25 25 25 0 35 0 35 25 60 25 60 35 0 35Z',\r\n    d3: 'M25 35 60 35 60 25 25 25Z',\r\n    dUb0: 'M25 60 35 60 35 25 25 25Z',\r\n    dUb36: 'M35 60 25 60 25 37Q25 25 37 25L150 25 150 35 38 35Q35 35 35 38Z',\r\n}\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const doneCharaHave = (entry, unbind) => {\r\n    if (unbind === undefined) {\r\n        return {\r\n            ub: 0,\r\n            no: []\r\n        }\r\n    }\r\n    if (unbind < 2) {\r\n        return {\r\n            ub: (entry.Rarity === 3) ? 2 : 3,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1)\r\n        }\r\n    }\r\n    if (unbind < 4) {\r\n        return {\r\n            ub: 4,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1)\r\n        }\r\n    }\r\n    return {\r\n        ub: entry.MaxLimitBreak,\r\n        no: (entry.MaxLimitBreak === 5) ? Array.from({ length: 20 }, (_, i) => i + 1) : Array.from({ length: 10 }, (_, i) => i + 1)\r\n    }\r\n}\r\n\r\nconst MC_STATIC = {\r\n    10101: 'Mc_StatusUp_Hp',\r\n    10102: 'Mc_StatusUp_Atk',\r\n    10103: 'Mc_StatusUp_HpAtk',\r\n    10601: 'Mc_Material_Get',\r\n    10602: 'Mc_Material_Get',\r\n    10701: 'Mc_Advanced_Training',\r\n    10801: 'Mc_Unbind_Level',\r\n}\r\nconst MC_PIECE_NAME = {\r\n    10101: '+Hp',\r\n    10102: '+Atk',\r\n    10103: '+Hp/Atk',\r\n    10201: 'FS Lv.',\r\n    10301: 'A1 Lv.',\r\n    10302: 'A2 Lv.',\r\n    10303: 'A3 Lv.',\r\n    10401: 'S1 Lv.',\r\n    10402: 'S2 Lv.',\r\n    10501: 'Ex Lv.',\r\n    10601: 'Item',\r\n    10701: 'Combo',\r\n    10801: '+Max Lv.'\r\n}\r\nconst MCPieceIcon = (entry, mcItem) => {\r\n    const piece = mcItem.Piece;\r\n    const icon = { img: null, txt: MC_PIECE_NAME[piece] };\r\n    if (MC_STATIC[piece]) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/${MC_STATIC[piece]}.png`;\r\n    } else if (piece === 10501) {\r\n        // exability\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.ExAbility}.png`;\r\n        icon.txt += mcItem.Step;\r\n    } else if (piece === 10201) {\r\n        // FS\r\n        const step = mcItem.Step + entry.DefaultLv.FS;\r\n        if (step === 2) {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Upgrade.png`;\r\n        } else {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Get.png`;\r\n        }\r\n\r\n        icon.txt += step;\r\n    } else if (piece >= 10301 && piece <= 10303) {\r\n        // Abilities\r\n        const abi = piece - 10300;\r\n        const step = mcItem.Step + entry.DefaultLv.Abilities[abi];\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.Abilities[abi][step]}.png`;\r\n        icon.txt += step;\r\n    } else if (piece >= 10401 && piece <= 10402) {\r\n        // Skills\r\n        const si = piece - 10400;\r\n        const step = (si === 1) ? mcItem.Step + 1 : mcItem.Step;\r\n        icon.img = `${process.env.PUBLIC_URL}/skill/${entry.Skills[si][step]}.png`;\r\n        icon.txt += step;\r\n    }\r\n    // Story override\r\n    if (mcItem.Story) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_CharaStory.png`;\r\n    }\r\n    return icon;\r\n}\r\n\r\n\r\n// hardcoded for perf\r\nconst MC50_RANGE = [\r\n    [41, 42, 43, 44, 45, 50, 49, 48, 47, 46],\r\n    [31, 32, 33, 34, 35, 40, 39, 38, 37, 36],\r\n    [21, 22, 23, 24, 25, 30, 29, 28, 27, 26],\r\n    [11, 12, 13, 14, 15, 20, 19, 18, 17, 16],\r\n    [1, 2, 3, 4, 5, 10, 9, 8, 7, 6],\r\n];\r\nconst MC70_RANGE = [\r\n    [51, 52, 53, 54, 55, 60, 59, 58, 57, 56, 61, 62, 63, 64, 65, 70, 69, 68, 67, 66],\r\n    ...MC50_RANGE\r\n]\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const mcInfo = ManaCircle[entry.MCName];\r\n\r\n    if (have && (have.no === undefined || have.ub === undefined)) {\r\n        have.ub = 0;\r\n        have.no = [];\r\n    }\r\n\r\n    const createThisHaving = () => {\r\n        updateHaving(id, doneCharaHave(entry));\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, doneCharaHave(entry, have.ub));\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n\r\n    const mcNum = (have) ? have.ub * 10 + have.no.length : 0;\r\n    const maxManaCircle = (entry.MaxLimitBreak === 5) ? 70 : 50;\r\n    const rarity = (have) ? Math.max(entry.Rarity, Math.min(5, have.ub + 1)) : entry.Rarity;\r\n    const cardIconUrl = `${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`;\r\n    const mcRanges = (entry.MaxLimitBreak === 5) ? MC70_RANGE : MC50_RANGE;\r\n\r\n    const [mcIdx, setMcIdx] = useState(have ? entry.MaxLimitBreak - have.ub : 0);\r\n    const handleTabs = (e, newMcIdx) => {\r\n        setMcIdx(newMcIdx);\r\n    };\r\n\r\n    const handleMCCheck = (e) => {\r\n        const seq = parseInt(e.target.name.split('-').slice(-1));\r\n        const mcItem = mcInfo[seq];\r\n        if (have) {\r\n            let newUb = mcItem.Hierarchy - 1;\r\n            let newNo = null;\r\n            if (have.ub < newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = [mcItem.No];\r\n                }\r\n            } else if (have.ub === newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = [...have.no];\r\n                    const index = newNo.indexOf(mcItem.No);\r\n                    if (index > -1) {\r\n                        newNo.splice(index, 1);\r\n                    } else {\r\n                        newNo.push(mcItem.No);\r\n                    }\r\n                }\r\n            } else if (have.ub > newUb) {\r\n                if (newUb === 5) {\r\n                    newNo = Array.from({ length: (mcItem.No - 1) }, (_, i) => i + 1);\r\n                } else {\r\n                    newNo = Array.from({ length: 9 }, (_, i) => (i + 1 >= mcItem.No) ? i + 2 : i + 1);\r\n                }\r\n            }\r\n            updateHaving(id, { ub: newUb, no: newNo });\r\n        } else {\r\n            updateHaving(id, {\r\n                ub: mcItem.Hierarchy - 1,\r\n                no: mcItem.Hierarchy < 6 ? [mcItem.No] : Array.from({ length: mcItem.No }, (_, i) => i + 1)\r\n            });\r\n        }\r\n    };\r\n    const getMCChecked = (seq) => {\r\n        if (!have) { return false; }\r\n        const mcItem = mcInfo[seq];\r\n        return (have.ub > mcItem.Hierarchy - 1) || (have.ub === mcItem.Hierarchy - 1 && have.no.includes(mcItem.No));\r\n    }\r\n\r\n    const handleUbCheck = (e) => {\r\n        const ubSeq = parseInt(e.target.name.split('-').slice(-1));\r\n        if (have && have.ub === ubSeq) {\r\n            updateHaving(id, { ub: ubSeq - 1, no: Array.from({ length: 10 }, (_, i) => i + 1) });\r\n        } else {\r\n            updateHaving(id, { ub: ubSeq, no: [] });\r\n        }\r\n    }\r\n    const getUbChecked = (ubSeq) => {\r\n        if (!have) { return false; }\r\n        return have.ub >= ubSeq;\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {(mcNum > 0) && (\r\n                        <Box className={clsx(classes.mcIcon, mcNum === maxManaCircle && classes.mcIconMaxed)}>{mcNum}</Box>\r\n                    )}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog maxWidth={false} onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Tabs\r\n                    value={mcIdx}\r\n                    onChange={handleTabs}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {mcRanges.map((mcRange, floor) => (\r\n                        <Tab\r\n                            key={floor}\r\n                            // className={clsx((have && have.ub > (entry.MaxLimitBreak - floor)) && classes[ELEMENTS[entry.Element]], (have && have.ub > (entry.MaxLimitBreak - floor)) && classes.mcTabFull)}\r\n                            classes={{ root: classes.mcTab }}\r\n                            label={`${Math.min(...mcRange)}-${Math.max(...mcRange)}`} id={`mc-tab-${floor}`}\r\n                            aria-controls={`mc-tabpanel-${floor}`}\r\n                        />\r\n                    ))}\r\n                </Tabs>\r\n                {mcRanges.map((mcRange, floor) => (\r\n                    <Box component=\"div\"\r\n                        role=\"tabpanel\"\r\n                        hidden={mcIdx !== floor}\r\n                        id={`mc-tabpanel-${floor}`}\r\n                        aria-labelledby={`mc-tab-${floor}`}\r\n                        value={mcIdx}\r\n                        index={floor}\r\n                        key={floor}\r\n                        dir=\"ltr\"\r\n                        className={clsx(classes.mcTabpanel)}>\r\n                        {(mcIdx === floor) && mcRange.map((seq) => {\r\n                            const mcItem = mcInfo[seq];\r\n                            const mcIcon = MCPieceIcon(entry, mcItem);\r\n                            let ubItem = null;\r\n                            const ubSeq = Math.floor(seq / 10);\r\n                            if ([11, 21, 31, 41, 51].includes(seq)) {\r\n                                const ubIcon = (ubSeq === 5) ? `Mc_Unbind_6M_0${entry.Element}` : 'Mc_Unbind_Mana';\r\n                                const ubChecked = getUbChecked(ubSeq);\r\n                                ubItem = (\r\n                                    <Box className={clsx(classes.mcTabUb)} >\r\n                                        <svg className={clsx(classes.mcDeco, ubSeq === 5 && classes.mcDecoUb5)}>\r\n                                            <path d={(ubSeq < 5) ? MC_SVG_PATHS.dUb0 : MC_SVG_PATHS.dUb36} fill={ubChecked ? \"#3f51b5\" : ELEMENT_BG_COLORS.Null}></path>\r\n                                        </svg>\r\n                                        <Tooltip title={`Unbind ${ubSeq}`} aria-label={`ub-${ubSeq}`} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                            <Checkbox\r\n                                                name={`${id}-ub-${ubSeq}`}\r\n                                                onClick={handleUbCheck}\r\n                                                color=\"default\"\r\n                                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                                checked={ubChecked}\r\n                                                icon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                                checkedIcon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                );\r\n                            }\r\n                            const seqMcTxt = `${seq}: ${mcIcon.txt}`;\r\n                            const nodeChecked = getMCChecked(seq);\r\n                            let mcDecoPath = MC_SVG_PATHS.d39;\r\n                            const seqR = seq % 10;\r\n                            if (seqR === 0){\r\n                                if (ubSeq === 7){\r\n                                    mcDecoPath = MC_SVG_PATHS.d3;\r\n                                } else if (ubSeq > 5){\r\n                                    mcDecoPath = MC_SVG_PATHS.d36;\r\n                                } else {\r\n                                    mcDecoPath = MC_SVG_PATHS.d03;\r\n                                }\r\n                            } else if (seqR === 1){\r\n                                if (ubSeq > 4){\r\n                                    mcDecoPath = MC_SVG_PATHS.d03;\r\n                                } else {\r\n                                    mcDecoPath = MC_SVG_PATHS.d36;\r\n                                }\r\n                            } else if (seqR === 3 && ubSeq < 5 && ubSeq > 0){\r\n                                mcDecoPath = MC_SVG_PATHS.d039;\r\n                            } else if (seqR === 5) {\r\n                                mcDecoPath = MC_SVG_PATHS.d69;\r\n                            } else if (seqR === 6) {\r\n                                mcDecoPath = MC_SVG_PATHS.d09;\r\n                            }\r\n                            return (\r\n                                <React.Fragment key={seq}>\r\n                                    {ubItem}\r\n                                    <Box>\r\n                                        <svg className={clsx(classes.mcDeco)}>\r\n                                            <path d={mcDecoPath} fill={nodeChecked ? \"#3f51b5\" : ELEMENT_BG_COLORS.Null}></path>\r\n                                        </svg>\r\n                                        <Tooltip title={seqMcTxt} aria-label={seqMcTxt} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                            <Checkbox\r\n                                                name={`${id}-mc-${seq}`}\r\n                                                onClick={handleMCCheck}\r\n                                                color=\"default\"\r\n                                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                                checked={nodeChecked}\r\n                                                icon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                                checkedIcon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                ))}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function DragonListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mub = (count / 5 >> 0);\r\n        const r = Math.max((count - 1) % 5, 0);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid key={i} item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {count > 5 && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry, fullWeapon) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        if (fullWeapon) {\r\n            have.b[1] = build[1].length;\r\n            have.b[2] = build[2].length;\r\n            have.b[3] = build[3].length;\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        // special case for agito\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry, have.b[1] >= 5);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = WeaponLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[5] && classes.mcIconMaxed)}>\r\n                        {levelData.Level}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const fortMaxNum = (entry) => {\r\n    if (entry.NameEN === 'Rupie Mine') {\r\n        return 4;\r\n    }\r\n    if (entry.NameEN.endsWith('Altar') || entry.NameEN.endsWith('Dojo')) {\r\n        return 2;\r\n    }\r\n    return 1\r\n}\r\n\r\nexport function FortListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have) {\r\n        const maxHave = Math.max(...Object.values(have));\r\n        if (maxHave <= 0) {\r\n            deleteHaving(id);\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n        } else {\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[maxHave - 1].Icon}.png`;\r\n        }\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const maxLv = entry.Detail.length;\r\n    const maxNum = fortMaxNum(entry);\r\n\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, (new Array(maxNum)).fill(maxLv));\r\n        } else {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteHaving(id);\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        } else {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const makeLevelChange = (idx) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                have[idx] = value;\r\n                updateHaving(id, have);\r\n            } else {\r\n                const newHave = (new Array(maxNum)).fill(0);\r\n                newHave[idx] = value;\r\n                updateHaving(id, newHave);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (Object.keys(have).map((key) => (<Box className={clsx(classes.circleIcon, classes[`circleIcon${key}`], (have[key] >= maxLv) && classes.circleIconMaxed)}>{have[key]}</Box>)))}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open} fullWidth={'md'}\r\n        >\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {Array(maxNum).fill(0).map((_, idx) => {\r\n                    const currentLevel = have ? have[idx] : 0;\r\n                    return (\r\n                        <Box key={idx}>\r\n                            <Typography id=\"level-slider\" gutterBottom>\r\n                                {`${cardName} ${(idx + 1)} - Lv.${currentLevel}`}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-level-${idx + 1}`}\r\n                                aria-labelledby=\"level-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={currentLevel}\r\n                                onChange={makeLevelChange(idx)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={maxLv}\r\n                                classes={classes.FgNull}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nconst fullAmuletHave = (entry) => {\r\n    const build = AmuletBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneAmuletHave = (entry, fullCopies) => {\r\n    const doneHave = fullAmuletHave(entry);\r\n    if (!fullCopies) {\r\n        doneHave.b[6] = 1;\r\n    }\r\n    return doneHave;\r\n}\r\n\r\nexport function AmuletListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if ((!entry.NoRefine) && have && have.b[1] && have.b[1] >= 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_02.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_01.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = AmuletBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        updateHaving(id, newHave || { b: { 6: 1 } });\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneAmuletHave(entry, have.b[1] === 4);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        // const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n        // have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = AmuletLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (\r\n                        <Box className={clsx(classes.mcIconAmulet, classes.mcIcon, have.b[1] === 4 && have.b[6] === 4 && classes.mcIconMaxed)}>\r\n                            {levelData.Level}</Box>\r\n                    )}\r\n                    <Box className={clsx(classes.amuletAbIcon)}><img alt={entry.AbIcon} src={`${process.env.PUBLIC_URL}/ability/${entry.AbIcon}.png`} /></Box>\r\n                    {entry.Union && (<Box className={clsx(classes.unionIcon)}><img alt={`Union_${entry.Union}`} src={`${process.env.PUBLIC_URL}/ui/${unionIcon(entry.Union)}.png`} /></Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport Chara from '../data/chara.json';\r\nimport ManaCircle from '../data/manacircle.json';\r\nimport CharaLimitBreak from '../data/charalimitbreak.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json';\r\n\r\nimport Amulet from '../data/amulet.json';\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport Fort from '../data/fort.json';\r\nimport Material from '../data/material.json';\r\n\r\nimport { ELEMENTS, WEAPONS, FORMS, unionIcon } from '../data/Mapping';\r\nimport { doneWeaponHave, doneAmuletHave, doneCharaHave, fortMaxNum, MaterialSummaryItem } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    radioTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em',\r\n        '& img': {\r\n            width: 30,\r\n            verticalAlign: 'middle'\r\n        }\r\n    },\r\n    fullToggle: {\r\n        float: \"right\",\r\n        position: \"relative\",\r\n        top: -4\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullAgito, setFullAgito] = React.useState(\"Agito Weapons Maxed\");\r\n    const isFullAgito = fullAgito === \"Agito Weapons Maxed\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullAgito = (event) => {\r\n        if (isFullAgito) {\r\n            setFullAgito(\"Agito Weapon Bonus Only\");\r\n        } else {\r\n            setFullAgito(\"Agito Weapons Maxed\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(entry, entry.Series === 4 && isFullAgito);\r\n        const build = WeaponBuild[entry.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6' || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = WeaponLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        totalMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    totalMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let m of Object.keys(entry.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += entry.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (bi === '6') { continue; }\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] = doneLevelMats[m];\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullAgito}\r\n                        name=\"fullAgito\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullAgito}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction FortMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    let totalTime = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Fort[id];\r\n        const currHave = having[id];\r\n        let currIter = null;\r\n        if (currHave) {\r\n            currIter = Object.values(currHave);\r\n        } else {\r\n            currIter = Array(fortMaxNum(entry)).fill(0);\r\n        }\r\n        for (const curLv of currIter) {\r\n            for (const detail of entry.Detail.slice(curLv)) {\r\n                totalCost += detail.Cost;\r\n                totalTime += detail.Time;\r\n                for (let m of Object.keys(detail.Mats)) {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] += detail.Mats[m];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom> {totalCost.toLocaleString()}</Typography>\r\n                    <QueryBuilderIcon style={{ verticalAlign: 'middle', marginLeft: 4 }} />\r\n                    <Typography display=\"inline\" gutterBottom> {totalTime.toLocaleString()}s</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction AmuletMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullCopies, setFullCopies] = React.useState(\"4 Copies\");\r\n    const isFullCopies = fullCopies === \"4 Copies\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullCopies = (event) => {\r\n        if (isFullCopies) {\r\n            setFullCopies(\"1 Copy\");\r\n        } else {\r\n            setFullCopies(\"4 Copies\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Amulet[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneAmuletHave(entry, isFullCopies);\r\n        const build = AmuletBuild[entry.Build];\r\n        const entryMats = {};\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? currHave.b[bi] : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = AmuletLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        entryMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    entryMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!entryMats[m]) { entryMats[m] = 0; }\r\n                entryMats[m] += doneLevelMats[m];\r\n            }\r\n        }\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullCopies}\r\n                        name=\"fullCopies\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.fullToggle)}\r\n                    >{fullCopies}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction CharaMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const totalCosts = {Mana: 0, Eldwater: 0};\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const currHave = having[id];\r\n        if (currHave && (currHave.no === undefined || currHave.ub === undefined)) { continue; }\r\n        if (!currHave) { continue; }\r\n        const entry = Chara[id];\r\n        const doneHave = doneCharaHave(entry, 5);\r\n        const mcInfo = ManaCircle[entry.MCName];\r\n        const clbInfo = CharaLimitBreak[entry.LimitBreak];\r\n        const entryMats = {};\r\n        const useGrow = entry.GrowEnd && Date.now() < entry.GrowEnd;\r\n\r\n        // unbind mats\r\n        if (useGrow) { entryMats['Grow'] = 0; }\r\n        for (let ub = currHave.ub + 1; ub <= doneHave.ub; ub += 1) {\r\n            if (useGrow && clbInfo[ub].Grow){\r\n                entryMats['Grow'] += clbInfo[ub].Grow;\r\n            } else {\r\n                for (let m of Object.keys(clbInfo[ub].Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += clbInfo[ub].Mats[m];\r\n                }\r\n            }\r\n        }\r\n        if (entry.Rarity < 4 && currHave.ub < 3){\r\n            totalCosts.Eldwater += 2500;\r\n        }\r\n        if (entry.Rarity < 5 && currHave.ub < 4){\r\n            totalCosts.Eldwater += 25000;\r\n        }\r\n\r\n        const calcNodeMats = (n) => {\r\n            const mcItem = mcInfo[n];\r\n            if (useGrow && mcItem.Mats.Grow){\r\n                entryMats['Grow'] += mcItem.Mats.Grow;\r\n            } else {\r\n                totalCosts.Mana += mcItem.Mana;\r\n                for (let m of Object.keys(mcItem.Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += mcItem.Mats[m];\r\n                }\r\n                const mcEle = mcItem.Ele[entry.MCEle];\r\n                if (mcEle){\r\n                    totalCosts.Eldwater += mcEle.Eldwater;\r\n                    for (let m of Object.keys(mcEle.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += mcEle.Mats[m];\r\n                    }    \r\n                }\r\n            }\r\n        }\r\n        // mc node mats\r\n        if (currHave.ub === doneHave.ub){\r\n            for (let n of doneHave.no.filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }\r\n        } else {\r\n            for (let n of Array.from({ length: (currHave.ub < 5 ? 10 : 20) }, (_, i) => i + 1).filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + currHave.ub * 10);\r\n            }\r\n            for (let n = (currHave.ub + 1) * 10; n < doneHave.ub * 10; n += 1) {\r\n                calcNodeMats(n);\r\n            }\r\n            for (let n of doneHave.no) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }    \r\n        }\r\n\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <Typography display=\"inline\" gutterBottom><img src={`${process.env.PUBLIC_URL}/ui/mana.png`} alt=\"mana\" />   {totalCosts.Mana.toLocaleString()}    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />   {totalCosts.Eldwater.toLocaleString()}</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, filters, radioFilters,\r\n        availabilities, series,\r\n        storeKey, having, visible\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleBoolCheckFilters = (e) => {\r\n        if (e.target.checked) { addFilter(e.target.name); }\r\n        else { removeFilter(e.target.name); }\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        \"Form\": FORMS,\r\n        \"Union\": [...Array(12).keys()].reduce((res, union) => {\r\n            res[union] = unionIcon(union);\r\n            return res;\r\n        }, {}),\r\n    }\r\n    if (minRarity && maxRarity) {\r\n        radioFilterValues[\"Rarity\"] = [...Array((maxRarity + 1) - minRarity).keys()].reduce((res, offset) => {\r\n            const rarity = minRarity + offset;\r\n            res[rarity] = `${rarity}_Star`;\r\n            return res;\r\n        }, { 0: '0_Star' })\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                {(storeKey === 'chara' || storeKey === 'dragon') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifHave} name=\"ifHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].HAVE} />\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotHave} name=\"ifNotHave\" onChange={handleBoolCheckFilters.bind(this)} color=\"primary\" />} label={TextLabel[locale].NOT_HAVE} />\r\n                </Grid>}\r\n                {(storeKey === 'fort') && <Grid item>\r\n                    <FormControlLabel control={<Checkbox checked={filters.ifNotMaxLevel} name=\"ifNotMaxLevel\" onChange={handleBoolCheckFilters.bind(this)} />} label={TextLabel[locale].NOT_MAXED} />\r\n                </Grid>}\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.radioTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {(storeKey === 'chara') && (<CharaMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'amulet') && (<AmuletMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'weapon') && (<WeaponMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'fort') && (<FortMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave, doneAmuletHave, doneCharaHave, fortMaxNum } from './ListingItems';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries) => (Object.keys(entries)),\r\n    byNameEN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity || b.localeCompare(a))),\r\n    byWeapon: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity || b.localeCompare(a))),\r\n    byRarity: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    byType: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Type - entries[b].Type || a - b)),\r\n    byForm: (entries) => Object.keys(entries).sort((a, b) => (entries[a].Form - entries[b].Form || entries[a].Rarity - entries[b].Rarity || a - b)),\r\n}\r\n\r\nconst CheckFilterMethods = {\r\n    ifHave: (entry, have) => (have),\r\n    ifNotHave: (entry, have) => (!have),\r\n    ifNotMaxLevel: (entry, have) => {\r\n        if (have) {\r\n            return entry.Detail.length > Math.min(...Object.values(have));\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](entry, have)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                if (storeKey === 'weapon') {\r\n                    newHaving[id] = doneWeaponHave(entries[id]);\r\n                } else if (storeKey === 'amulet'){\r\n                    newHaving[id] = doneAmuletHave(entries[id]);\r\n                } else if (storeKey === 'fort') {\r\n                    newHaving[id] = (new Array(fortMaxNum(entries[id]))).fill(entries[id].Detail.length);\r\n                } else if (storeKey === 'chara') {\r\n                    newHaving[id] = doneCharaHave(entries[id])\r\n                } else {\r\n                    newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        let count = visibleHave;\r\n        let total = visibleEntries.length;\r\n        if (storeKey === 'weapon') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? (having[id].b[5] ? 1 : 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (WeaponBuild[entries[id].Build][5] ? 1 : 0)), 0);\r\n        } else if (storeKey === 'fort') {\r\n            const halidom = having[100101] ? having[100101][0] : 0;\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? Object.values(having[id]).reduce((a, b) => a + b, 0) : 0)), 0) - halidom;\r\n            total = visibleEntries.reduce((res, id) => (res + (fortMaxNum(entries[id]) * entries[id].Detail.length)), 0) - 10;\r\n        }\r\n        const p = ((100 * count / total) >> 0)\r\n        return `${title}: ${count} / ${total} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                storeKey={storeKey}\r\n                having={having}\r\n                visible={visibleEntries}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, DragonListingItem, WeaponListingItem, FortListingItem, AmuletListingItem, } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\nimport Fort from './data/fort.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n            <Tab label={TextLabel[locale].FACILITY} {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={DragonListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          // cardIconFn={amuletCardIcon}\r\n          minRarity={1}\r\n          maxRarity={3}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Form', 'Union']}\r\n          ItemComponent={AmuletListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={4} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Fort}\r\n          storeKey={'fort'}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byType']}\r\n          radioFilters={[]}\r\n          ItemComponent={FortListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}