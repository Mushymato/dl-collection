{"version":3,"sources":["data/Mapping.js","view/ListingItems.js","view/ListingControls.js","view/Listing.js","App.js","serviceWorker.js","index.js"],"names":["WEAPONS","0","1","2","3","4","5","6","7","8","9","ELEMENTS","FORMS","ELEMENT_BG_COLORS","ELEMENT_FG_COLORS","DEFAULT_HAVE","dragon","c","unionIcon","union","toLocaleString","minimumIntegerDigits","useGrouping","MEDALS","useStyles","makeStyles","root","width","transition","cardIcon","margin","height","cardIconEditing","cardCountIcon","cardName","padding","cardNameText","fontWeight","fontSize","textTransform","letterSpacing","cardCount","marginBottom","cardCountText","cardNameNoWrap","whiteSpace","cardEdit","paddingLeft","paddingRight","visibility","cardEditEditing","position","top","left","zIndex","amuletAbIcon","mcIcon","backgroundImage","process","backgroundRepeat","backgroundSize","textAlign","lineHeight","color","textShadow","mcIconDone","mcIconMaxed","mcIconAmulet","circleIcon","backgroundColor","borderRadius","circleIconMaxed","circleIcon0","circleIcon1","circleIcon2","circleIcon3","unbindIcons","bottom","mubCount","ubIcon","ub0","ubN","ubM","ub02","ubM2","dialogIcon","abilityCheckTooltip","abilityCheck","abilityIcon","grayscale","filter","mcTab","minWidth","mcTabpanel","display","gridTemplateColumns","medalTabpanel","medalIcon","medalButton","float","medalDeco","verticalAlign","mcTabUb","gridColumnStart","gridColumnEnd","mcDeco","mcDecoUb5","Flame","Water","Wind","Light","Shadow","Null","FgFlame","FgWater","FgWind","FgLight","FgShadow","FgNull","MC_SVG_PATHS","insertLinebreak","name","locale","replace","BaseListingItem","props","entry","have","lcHaving","rcHaving","editing","toggleEditing","cardIconUrl","CardIconDeco","children","classes","Grid","item","Card","className","clsx","Element","CardActionArea","onClick","onContextMenu","CardMedia","image","title","alt","CardContent","Button","size","endIcon","CardActions","doneCharaHave","unbind","undefined","ub","no","md","Rarity","Array","from","length","_","i","MaxLimitBreak","MC_STATIC","10101","10102","10103","10601","10602","10701","10801","MC_PIECE_NAME","10201","10301","10302","10303","10401","10402","10501","MC50_RANGE","MC70_RANGE","CharaListingItem","id","category","updateHaving","deleteHaving","React","useState","open","setOpen","handleClose","mcInfo","ManaCircle","MCName","createThisHaving","deleteThisHaving","setMcIdx","mcNum","maxManaCircle","rarity","Math","max","min","mcRanges","mcIdx","handleMCCheck","e","seq","parseInt","target","split","slice","mcItem","newHave","Hierarchy","No","index","indexOf","splice","push","handleUbCheck","ubSeq","handleMedalCheck","mdSeq","preventDefault","Box","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","FormControlLabel","control","Checkbox","checked","icon","src","checkedIcon","label","Typography","Object","keys","variant","TextLabel","MEDAL","DialogContent","dividers","Tabs","value","onChange","newMcIdx","indicatorColor","textColor","scrollButtons","map","mcRange","floor","Tab","aria-controls","component","role","style","dir","piece","Piece","img","txt","ExAbility","Step","step","DefaultLv","FS","abi","Abilities","si","Skills","Story","MCPieceIcon","ubItem","includes","ubChecked","getUbChecked","d","fill","Tooltip","aria-label","placement","popper","seqMcTxt","nodeChecked","getMCChecked","mcDecoPath","seqR","Fragment","medal","standardCardIcon","count","DragonListingItem","cardIconFn","setEditing","dh","nextC","mlb","mub","r","console","log","container","justify","TextField","COUNT","onInput","isNaN","focus","fullWeaponHave","build","WeaponBuild","Build","b","Passive","p","doneWeaponHave","fullWeapon","k","unbindReq","UnbindReq","prereqWeaponHaves","tempHaving","prereq","prereqHaves","Create","Weapon","Prereq","FullUp","WeaponListingItem","Skins","prereqs","setBuildValues","reduce","acc","cur","idx","makeBuildChange","setAbilityValues","handleAbilityCheck","levelData","Level","Mats","WeaponLevel","doneHave","bi","WeaponSeries","Series","buildInfo","buildpiece","buildvalue","gutterBottom","Slider","valueLabelDisplay","marks","colorPrimary","passive","abilityName","Ability","iconPath","Icon","MaterialSummaryItem","m","align","fortMaxNum","NameEN","endsWith","FortListingItem","maxHave","values","Detail","maxLv","maxNum","makeLevelChange","key","fullWidth","currentLevel","doneAmuletHave","fullCopies","AmuletBuild","fullAmuletHave","AmuletListingItem","NoRefine","BaseId","AmuletLevel","AbIcon","Union","marginTop","sortSelect","radioGroup","marginLeft","fieldsetTitle","radioRoot","radioIcon","unchecked","opacity","availButton","availChecks","paddingTop","costTitle","minHeight","maxToggle","tristateCheck","tristateCheckLabel","WeaponMaterialSummation","having","visible","maxWeapon","setMaxWeapon","isMaxWeapon","toggleOpen","event","type","totalCost","totalMats","currHave","bs","Cost","currLevelMats","doneLevelMats","diff","sorted","sort","a","Material","SortId","MATS","anchor","spacing","alignItems","wrap","FortMaterialSummation","totalTime","Fort","currIter","curLv","detail","Time","AmuletMaterialSummation","setFullCopies","isFullCopies","Amulet","entryMats","tm","CharaMaterialSummation","totalCosts","Mana","Eldwater","Chara","clbInfo","CharaLimitBreak","LimitBreak","useGrow","GrowEnd","Date","now","Grow","calcNodeMats","n","mcEle","Ele","MCEle","ListingControls","minRarity","maxRarity","handleSort","sortOptions","order","toggleOrder","majorityHaving","toggleAllHaving","addFilter","removeFilter","modifyFilter","filters","radioFilters","availabilities","series","storeKey","ifHave","ifNotHave","haveState","setHaveState","ifMaxed","ifNotMaxed","maxedState","setMaxedState","radioFilterValues","res","offset","handleRadioFilter","anchorEl","setAnchorEl","handleClick","currentTarget","Boolean","handleAvail","nextAvail","Availability","handleSeries","nextSeries","AppBar","FormControl","InputLabel","SORT_BY","Select","select","so","MenuItem","toUpperCase","IconButton","FormLabel","disabled","HAVE","NOT_HAVE","indeterminate","newFilters","MAXED","NOT_MAXED","rf","RadioGroup","toString","row","bind","v","Radio","AVAILABILITY","Popover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","av","SERIES","sr","weaponSeriesSortOrder","SortMethods","byID","entries","byNameEN","localeCompare","byNameJP","NameJP","byNameCN","NameCN","byElement","byWeapon","byRarity","bySeries","byType","Type","byForm","Form","byMC","haveA","haveB","byMC_DSC","compareHaveItem","valueA","valueB","isArray","ifMaxedEntry","maxedHave","CheckFilterMethods","loadLocalObj","init","saved","localStorage","getItem","JSON","parse","saveLocalObj","obj","setItem","stringify","Listing","sortDefault","ItemComponent","fullStoreKey","setHaving","changes","newHaving","storeSortKey","setSort","storeSortOrderKey","setOrder","storeFilterKey","setFilters","visibleEntries","sortedId","reverse","f","every","visibleHave","nextOrder","filterType","total","halidomVisible","halidom","statLabel","COMPLETION","theme","createMuiTheme","typography","fontFamily","TabPanel","other","hidden","direction","a11yProps","App","setIdx","setLocale","ThemeProvider","Toolbar","disableGutters","newIdx","ADVENTURERS","DRAGONS","AMULETS","FACILITY","Availabilities","Dragon","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.95c54977.chunk.js","sourcesContent":["export const WEAPONS = {\r\n    0: 'Null',\r\n    1: 'Sword',\r\n    2: 'Blade',\r\n    3: 'Dagger',\r\n    4: 'Axe',\r\n    5: 'Lance',\r\n    6: 'Bow',\r\n    7: 'Wand',\r\n    8: 'Staff',\r\n    9: 'Gun'\r\n}\r\n\r\nexport const ELEMENTS = {\r\n    0: 'Null',\r\n    1: 'Flame',\r\n    2: 'Water',\r\n    3: 'Wind',\r\n    4: 'Light',\r\n    5: 'Shadow'\r\n}\r\n\r\nexport const FORMS = {\r\n    0: 'Form0',\r\n    2: 'FormB',\r\n    1: 'FormA',\r\n    3: 'FormC',\r\n}\r\n\r\nexport const ELEMENT_BG_COLORS = {\r\n    Null: 'rgb(192, 192,192)',\r\n    Flame: 'rgb(255, 153, 153)',\r\n    Water: 'rgb(153, 194, 255)',\r\n    Wind: 'rgb(153, 255, 153)',\r\n    Light: 'rgb(255, 255, 153)',\r\n    Shadow: 'rgb(230, 153, 255)'\r\n}\r\n\r\nexport const ELEMENT_FG_COLORS = {\r\n    Null: 'null',\r\n    Flame: 'rgb(204, 0, 0)',\r\n    Water: 'rgb(0, 51, 204)',\r\n    Wind: 'rgb(0, 153, 0)',\r\n    Light: 'rgb(255,180,0)',\r\n    Shadow: 'rgb(102, 0, 204)'\r\n}\r\n\r\nexport const DEFAULT_HAVE = {\r\n    dragon: {\r\n        3: { c: 5 },\r\n        4: { c: 5 },\r\n        5: { c: 1 }\r\n    }\r\n}\r\n\r\nexport const unionIcon = (union) => (`Icon_Union_${union.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}`);\r\n\r\n\r\nexport const MEDALS = [\r\n    'Icon_Medal_100101',\r\n    'Icon_Medal_100201',\r\n    'Icon_Medal_100301',\r\n    'Icon_Medal_100302',\r\n    'Icon_Medal_100401',\r\n    'Icon_Medal_100402',\r\n    'Icon_Medal_100501',\r\n    'Icon_Medal_100502',\r\n    'Icon_Medal_100503',\r\n    'Icon_Medal_100601',\r\n    'Icon_Medal_100602',\r\n    'Icon_Medal_100603',\r\n    'Icon_Medal_100701',\r\n    'Icon_Medal_100801',\r\n    'Icon_Medal_100802',\r\n    'Icon_Medal_100803',\r\n    'Icon_Medal_100901',\r\n    'Icon_Medal_101001',\r\n    'Icon_Medal_101002',\r\n    'Icon_Medal_101003'\r\n]\r\n// export const MEDALS = [\r\n//     'Icon_Medal_100301',\r\n//     'Icon_Medal_100302',\r\n//     'Icon_Medal_100401',\r\n//     'Icon_Medal_100402',\r\n//     'Icon_Medal_100101',\r\n//     'Icon_Medal_100501',\r\n//     'Icon_Medal_100502',\r\n//     'Icon_Medal_100503',\r\n//     'Icon_Medal_100601',\r\n//     'Icon_Medal_100602',\r\n//     'Icon_Medal_100603',\r\n//     'Icon_Medal_100701',\r\n//     'Icon_Medal_100901',\r\n//     'Icon_Medal_100801',\r\n//     'Icon_Medal_100802',\r\n//     'Icon_Medal_100803',\r\n//     'Icon_Medal_100201',\r\n//     'Icon_Medal_101001',\r\n//     'Icon_Medal_101002',\r\n//     'Icon_Medal_101003'\r\n// ]","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport ManaCircle from '../data/manacircle.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponSeries from '../data/weaponseries.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json'\r\n\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport { ELEMENTS, ELEMENT_BG_COLORS, ELEMENT_FG_COLORS, DEFAULT_HAVE, unionIcon, MEDALS } from '../data/Mapping';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 120,\r\n        transition: 'background-color 0.2s linear'\r\n    },\r\n    cardIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 120,\r\n        width: 120\r\n    },\r\n    cardIconEditing: {\r\n        height: 72,\r\n        width: 72\r\n    },\r\n    cardCountIcon: {\r\n        transition: 'width 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n        margin: 'auto',\r\n        height: 90,\r\n        width: 90\r\n    },\r\n    cardName: {\r\n        padding: '0 !important',\r\n        height: '2.5em'\r\n    },\r\n    cardNameText: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        textTransform: 'none',\r\n        letterSpacing: -1,\r\n        '& .MuiButton-endIcon': {\r\n            margin: 0,\r\n            padding: 0\r\n        }\r\n    },\r\n    cardCount: {\r\n        padding: '0 !important',\r\n        height: '1em',\r\n        marginBottom: 8,\r\n    },\r\n    cardCountText: {\r\n        fontWeight: 700,\r\n        fontSize: '0.75em',\r\n        letterSpacing: -1,\r\n    },\r\n    cardNameNoWrap: {\r\n        whiteSpace: 'pre'\r\n    },\r\n    cardEdit: {\r\n        padding: 0,\r\n        margin: 0,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transition: 'visibility 0.1s linear 0.1s, height 0.1s linear 0.1s',\r\n    },\r\n    cardEditEditing: {\r\n        height: 48,\r\n        visibility: 'visible'\r\n    },\r\n    unionIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 48,\r\n        zIndex: 1\r\n    },\r\n    amuletAbIcon: {\r\n        \"& img\": {\r\n            width: 24,\r\n        },\r\n        position: 'absolute',\r\n        top: 6,\r\n        left: 28,\r\n        zIndex: 2\r\n    },\r\n    mcIcon: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/mc.png\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        textAlign: 'center',\r\n        width: 30,\r\n        height: 30,\r\n        lineHeight: '30px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        top: 45,\r\n        left: 3,\r\n        zIndex: 2\r\n    },\r\n    mcIconDone: {\r\n        color: '#ffcc26'\r\n    },\r\n    mcIconMaxed: {\r\n        color: '#41eded'\r\n    },\r\n    mcIconAmulet: {\r\n        top: 25,\r\n    },\r\n    circleIcon: {\r\n        backgroundColor: 'gray',\r\n        textAlign: 'center',\r\n        width: 19,\r\n        height: 19,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        color: 'white',\r\n        fontSize: '0.9em',\r\n        textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n        // fontSize: '1em',\r\n        // '-webkit-text-stroke': '1px black',\r\n        position: 'absolute',\r\n        borderRadius: 50,\r\n        top: 5,\r\n    },\r\n    circleIconMaxed: {\r\n        color: '#48D1CC'\r\n    },\r\n    circleIcon0: {\r\n        left: 4\r\n    },\r\n    circleIcon1: {\r\n        left: 25,\r\n    },\r\n    circleIcon2: {\r\n        left: 46,\r\n    },\r\n    circleIcon3: {\r\n        left: 67,\r\n    },\r\n    unbindIcons: {\r\n        position: 'absolute',\r\n        bottom: 0\r\n    },\r\n    mubCount: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubc.png\")`,\r\n        lineHeight: '20px',\r\n        fontWeight: 700,\r\n        textAlign: 'center',\r\n        fontSize: '0.9em',\r\n    },\r\n    ubIcon: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        width: 16,\r\n        height: 20\r\n    },\r\n    ub0: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub0.png\")`,\r\n    },\r\n    ubN: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubn.png\")`,\r\n    },\r\n    ubM: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm.png\")`,\r\n    },\r\n    ub02: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ub02.png\")`,\r\n    },\r\n    ubM2: {\r\n        backgroundImage: `url(\"${process.env.PUBLIC_URL}/ui/ubm2.png\")`,\r\n    },\r\n    dialogIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    abilityCheckTooltip: {\r\n        top: '10px !important',\r\n        padding: 0,\r\n        fontSize: '1.2em'\r\n    },\r\n    abilityCheck: {\r\n        padding: 0\r\n    },\r\n    abilityIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    grayscale: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    mcTab: {\r\n        minWidth: 20,\r\n    },\r\n    mcTabpanel: {\r\n        display: 'grid',\r\n        margin: '0 auto',\r\n        gridTemplateColumns: 'repeat(5, 1fr)',\r\n        textAlign: 'center',\r\n        width: 'fit-content',\r\n    },\r\n    medalTabpanel: {\r\n        display: 'grid',\r\n        margin: '0 auto',\r\n        gridTemplateColumns: 'repeat(4, 1fr)',\r\n        textAlign: 'center',\r\n        width: 'fit-content',\r\n    },\r\n    medalIcon: {\r\n        width: 60,\r\n        height: 60\r\n    },\r\n    medalButton: {\r\n        float: \"right\",\r\n        position: \"relative\",\r\n        top: 21,\r\n    },\r\n    medalDeco: {\r\n        width: 25,\r\n        height: 25,\r\n        verticalAlign: 'middle'\r\n    },\r\n    mcTabUb: {\r\n        position: 'relative',\r\n        gridColumnStart: 1,\r\n        gridColumnEnd: 6,\r\n    },\r\n    mcDeco: {\r\n        position: 'absolute',\r\n        zIndex: 0,\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n    mcDecoUb5: {\r\n        width: 180,\r\n        left: 0,\r\n    },\r\n    Flame: { backgroundColor: ELEMENT_BG_COLORS.Flame },\r\n    Water: { backgroundColor: ELEMENT_BG_COLORS.Water },\r\n    Wind: { backgroundColor: ELEMENT_BG_COLORS.Wind },\r\n    Light: { backgroundColor: ELEMENT_BG_COLORS.Light },\r\n    Shadow: { backgroundColor: ELEMENT_BG_COLORS.Shadow },\r\n    Null: { backgroundColor: ELEMENT_BG_COLORS.Null },\r\n    FgFlame: { color: ELEMENT_FG_COLORS.Flame },\r\n    FgWater: { color: ELEMENT_FG_COLORS.Water },\r\n    FgWind: { color: ELEMENT_FG_COLORS.Wind },\r\n    FgLight: { color: ELEMENT_FG_COLORS.Light },\r\n    FgShadow: { color: ELEMENT_FG_COLORS.Shadow },\r\n    FgNull: { color: ELEMENT_FG_COLORS.Null },\r\n});\r\n\r\nconst MC_SVG_PATHS = {\r\n    d39: 'M0 25 60 25 60 35 0 35Z',\r\n    d36: 'M60 25 25 25 25 60 35 60 35 35 60 35Z',\r\n    d69: 'M0 25 35 25 35 60 25 60 25 35 0 35Z',\r\n    d03: 'M60 35 25 35 25 0 35 0 35 25 60 25Z',\r\n    d09: 'M0 35 35 35 35 0 25 0 25 25 0 25Z',\r\n    d039: 'M0 25 25 25 25 0 35 0 35 25 60 25 60 35 0 35Z',\r\n    d3: 'M25 35 60 35 60 25 25 25Z',\r\n    dUb0: 'M25 60 35 60 35 25 25 25Z',\r\n    dUb36: 'M35 60 25 60 25 37Q25 25 37 25L150 25 150 35 38 35Q35 35 35 38Z',\r\n}\r\n\r\nexport const insertLinebreak = (name, locale) => {\r\n    switch (locale) {\r\n        case 'JP':\r\n        case 'CN':\r\n            return name.replace('\\uff08', '\\n\\uff08');\r\n        default:\r\n            return name;\r\n    }\r\n}\r\n\r\nfunction BaseListingItem(props) {\r\n    const { locale, entry, have, lcHaving, rcHaving, editing, toggleEditing, cardIconUrl, CardIconDeco, children } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    return (\r\n        <Grid item>\r\n            <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n                <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                    <CardMedia\r\n                        className={clsx(classes.cardIcon, editing && classes.cardIconEditing)}\r\n                        image={cardIconUrl}\r\n                        title={cardName} alt={cardName} >\r\n                        <CardIconDeco />\r\n                    </CardMedia>\r\n                </CardActionArea>\r\n                <CardContent\r\n                    className={classes.cardName}>\r\n                    <Button\r\n                        className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                        size=\"small\"\r\n                        endIcon={editing ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        onClick={toggleEditing}>\r\n                        {insertLinebreak(cardName, locale)}\r\n                    </Button>\r\n                </CardContent>\r\n                <CardActions className={clsx(classes.cardEdit, editing && classes.cardEditEditing)} >\r\n                    {children}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const doneCharaHave = (entry, unbind) => {\r\n    if (unbind === undefined) {\r\n        return {\r\n            ub: 0,\r\n            no: [],\r\n            md: {},\r\n        }\r\n    }\r\n    if (unbind < 2) {\r\n        return {\r\n            ub: (entry.Rarity === 3) ? 2 : 3,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1),\r\n            md: {},\r\n        }\r\n    }\r\n    if (unbind < 4) {\r\n        return {\r\n            ub: 4,\r\n            no: Array.from({ length: 10 }, (_, i) => i + 1),\r\n            md: {},\r\n        }\r\n    }\r\n    return {\r\n        ub: entry.MaxLimitBreak,\r\n        no: (entry.MaxLimitBreak === 5) ? Array.from({ length: 20 }, (_, i) => i + 1) : Array.from({ length: 10 }, (_, i) => i + 1),\r\n        md: {},\r\n    }\r\n}\r\n\r\nconst MC_STATIC = {\r\n    10101: 'Mc_StatusUp_Hp',\r\n    10102: 'Mc_StatusUp_Atk',\r\n    10103: 'Mc_StatusUp_HpAtk',\r\n    10601: 'Mc_Material_Get',\r\n    10602: 'Mc_Material_Get',\r\n    10701: 'Mc_Advanced_Training',\r\n    10801: 'Mc_Unbind_Level',\r\n}\r\nconst MC_PIECE_NAME = {\r\n    10101: '+Hp',\r\n    10102: '+Atk',\r\n    10103: '+Hp/Atk',\r\n    10201: 'FS Lv.',\r\n    10301: 'A1 Lv.',\r\n    10302: 'A2 Lv.',\r\n    10303: 'A3 Lv.',\r\n    10401: 'S1 Lv.',\r\n    10402: 'S2 Lv.',\r\n    10501: 'Ex Lv.',\r\n    10601: 'Item',\r\n    10701: 'Combo',\r\n    10801: '+Max Lv.'\r\n}\r\nconst MCPieceIcon = (entry, mcItem) => {\r\n    const piece = mcItem.Piece;\r\n    const icon = { img: null, txt: MC_PIECE_NAME[piece] };\r\n    if (MC_STATIC[piece]) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/${MC_STATIC[piece]}.png`;\r\n    } else if (piece === 10501) {\r\n        // exability\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.ExAbility}.png`;\r\n        icon.txt += mcItem.Step;\r\n    } else if (piece === 10201) {\r\n        // FS\r\n        const step = mcItem.Step + entry.DefaultLv.FS;\r\n        if (step === 2) {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Upgrade.png`;\r\n        } else {\r\n            icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_Burstattack_Get.png`;\r\n        }\r\n\r\n        icon.txt += step;\r\n    } else if (piece >= 10301 && piece <= 10303) {\r\n        // Abilities\r\n        const abi = piece - 10300;\r\n        const step = mcItem.Step + entry.DefaultLv.Abilities[abi];\r\n        icon.img = `${process.env.PUBLIC_URL}/ability/${entry.Abilities[abi][step]}.png`;\r\n        icon.txt += step;\r\n    } else if (piece >= 10401 && piece <= 10402) {\r\n        // Skills\r\n        const si = piece - 10400;\r\n        const step = (si === 1) ? mcItem.Step + 1 : mcItem.Step;\r\n        icon.img = `${process.env.PUBLIC_URL}/skill/${entry.Skills[si][step]}.png`;\r\n        icon.txt += step;\r\n    }\r\n    // Story override\r\n    if (mcItem.Story) {\r\n        icon.img = `${process.env.PUBLIC_URL}/manacircle/Mc_CharaStory.png`;\r\n    }\r\n    return icon;\r\n}\r\n\r\n\r\n// hardcoded for perf\r\nconst MC50_RANGE = [\r\n    [41, 42, 43, 44, 45, 50, 49, 48, 47, 46],\r\n    [31, 32, 33, 34, 35, 40, 39, 38, 37, 36],\r\n    [21, 22, 23, 24, 25, 30, 29, 28, 27, 26],\r\n    [11, 12, 13, 14, 15, 20, 19, 18, 17, 16],\r\n    [1, 2, 3, 4, 5, 10, 9, 8, 7, 6],\r\n];\r\nconst MC70_RANGE = [\r\n    [51, 52, 53, 54, 55, 60, 59, 58, 57, 56, 61, 62, 63, 64, 65, 70, 69, 68, 67, 66],\r\n    ...MC50_RANGE\r\n]\r\nexport function CharaListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const mcInfo = ManaCircle[entry.MCName];\r\n\r\n    if (have) {\r\n        if (have.no === undefined || have.ub === undefined){\r\n            have.ub = 0;\r\n            have.no = [];\r\n        }\r\n        if (have.md === undefined) {\r\n            have.md = {};\r\n        }\r\n    }\r\n\r\n    const createThisHaving = () => {\r\n        updateHaving(id, doneCharaHave(entry));\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, doneCharaHave(entry, have.ub));\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        setMcIdx(0);\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n\r\n    const mcNum = (have) ? have.ub * 10 + have.no.length : 0;\r\n    const maxManaCircle = (entry.MaxLimitBreak === 5) ? 70 : 50;\r\n    const rarity = (have) ? Math.max(entry.Rarity, Math.min(5, have.ub + 1)) : entry.Rarity;\r\n    const cardIconUrl = `${process.env.PUBLIC_URL}/chara/${id}_r0${rarity}.png`;\r\n    const mcRanges = (entry.MaxLimitBreak === 5) ? MC70_RANGE : MC50_RANGE;\r\n\r\n    const [mcIdx, setMcIdx] = useState(have ? entry.MaxLimitBreak - have.ub : 0);\r\n    const handleTabs = (e, newMcIdx) => {\r\n        setMcIdx(newMcIdx);\r\n    };\r\n\r\n    const handleMCCheck = (e) => {\r\n        const seq = parseInt(e.target.name.split('-').slice(-1));\r\n        const mcItem = mcInfo[seq];\r\n        const newHave = have ? {...have} : {ub: 0, no: [], md: {}};\r\n        if (have) {\r\n            newHave.ub = mcItem.Hierarchy - 1;\r\n            newHave.no = [];\r\n            if (have.ub < newHave.ub) {\r\n                if (newHave.ub === 5) {\r\n                    newHave.no = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newHave.no = [mcItem.No];\r\n                }\r\n            } else if (have.ub === newHave.ub) {\r\n                if (newHave.ub === 5) {\r\n                    newHave.no = Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n                } else {\r\n                    newHave.no = [...have.no];\r\n                    const index = newHave.no.indexOf(mcItem.No);\r\n                    if (index > -1) {\r\n                        newHave.no.splice(index, 1);\r\n                    } else {\r\n                        newHave.no.push(mcItem.No);\r\n                    }\r\n                }\r\n            } else if (have.ub > newHave.ub) {\r\n                if (newHave.ub === 5) {\r\n                    newHave.no = Array.from({ length: (mcItem.No - 1) }, (_, i) => i + 1);\r\n                } else {\r\n                    newHave.no = Array.from({ length: 9 }, (_, i) => (i + 1 >= mcItem.No) ? i + 2 : i + 1);\r\n                }\r\n            }\r\n        } else {\r\n            newHave.ub = mcItem.Hierarchy - 1;\r\n            newHave.no = mcItem.Hierarchy < 6 ? [mcItem.No] : Array.from({ length: mcItem.No }, (_, i) => i + 1);\r\n        }\r\n        updateHaving(id, newHave);\r\n    };\r\n    const getMCChecked = (seq) => {\r\n        if (!have) { return false; }\r\n        const mcItem = mcInfo[seq];\r\n        return (have.ub > mcItem.Hierarchy - 1) || (have.ub === mcItem.Hierarchy - 1 && have.no.includes(mcItem.No));\r\n    }\r\n\r\n    const handleUbCheck = (e) => {\r\n        const ubSeq = parseInt(e.target.name.split('-').slice(-1));\r\n        const newHave = have ? {...have} : {ub: 0, no: [], md: {}};\r\n        if (have && have.ub === ubSeq) {\r\n            newHave.ub = ubSeq - 1;\r\n            newHave.no = Array.from({ length: 10 }, (_, i) => i + 1);\r\n        } else {\r\n            newHave.ub = ubSeq;\r\n            newHave.no = [];\r\n        }\r\n        updateHaving(id, newHave);\r\n    }\r\n    const getUbChecked = (ubSeq) => {\r\n        if (!have) { return false; }\r\n        return have.ub >= ubSeq;\r\n    }\r\n\r\n    const handleMedalCheck = (e) => {\r\n        const mdSeq = parseInt(e.target.name.split('-').slice(-1));\r\n        const newHave = have ? {...have} : {ub: 0, no: [], md: {}};\r\n        if (have && have.md[mdSeq]){\r\n            delete newHave.md[mdSeq];\r\n        } else {\r\n            newHave.md[mdSeq] = 1;\r\n        }\r\n        updateHaving(id, newHave);\r\n    }\r\n    const getMedalChecked = (mdSeq) => {\r\n        if (!have) { return false; }\r\n        return !!(have.md[mdSeq]);\r\n    }\r\n    const handleMedalCount = (e) => {\r\n        const newHave =  {...have};\r\n        if (Object.keys(have.md).length === MEDALS.length){\r\n            for (let seq = 0; seq < MEDALS.length; seq += 1) {\r\n                delete newHave.md[seq];\r\n            }\r\n        } else {\r\n            for (let seq = 0; seq < MEDALS.length; seq += 1) {\r\n                newHave.md[seq] = 1;\r\n            }\r\n        }\r\n        updateHaving(id, newHave);\r\n    }\r\n    // const MedalDeco = <React.Fragment><img className={clsx(classes.medalDeco)} src={`${process.env.PUBLIC_URL}/medal_on/Icon_Medal_100101.png`} alt={TextLabel[locale].MEDAL}/>{Object.keys(have.md).length}</React.Fragment>;\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {(mcNum > 0) && (\r\n                        <Box className={clsx(classes.mcIcon, mcNum >= maxManaCircle ? classes.mcIconMaxed : (mcNum >= 50 && classes.mcIconDone))}>{mcNum}</Box>\r\n                    )}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog maxWidth={false} onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n                {have && (\r\n                    <Button className={clsx(classes.medalButton)} name={`${id}-medal-count`} onClick={handleMedalCount} variant=\"outlined\">\r\n                        <img className={clsx(classes.medalDeco)} src={`${process.env.PUBLIC_URL}/medal_on/Icon_Medal_100101.png`} alt={TextLabel[locale].MEDAL}/>{Object.keys(have.md).length}\r\n                    </Button>\r\n                )}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Tabs\r\n                    value={mcIdx}\r\n                    onChange={handleTabs}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {mcRanges.map((mcRange, floor) => (\r\n                        <Tab\r\n                            key={floor}\r\n                            // className={clsx((have && have.ub > (entry.MaxLimitBreak - floor)) && classes[ELEMENTS[entry.Element]], (have && have.ub > (entry.MaxLimitBreak - floor)) && classes.mcTabFull)}\r\n                            classes={{ root: classes.mcTab }}\r\n                            label={`${Math.min(...mcRange)}-${Math.max(...mcRange)}`} id={`mc-tab-${floor}`}\r\n                            aria-controls={`mc-tabpanel-${floor}`}\r\n                        />\r\n                    ))}\r\n                    {have && <Tab key={mcRanges.length} classes={{ root: classes.mcTab }} label={TextLabel[locale].MEDAL} id={`mc-tab-${mcRanges.length}`} aria-controls={`mc-tabpanel-${mcRanges.length}`}/>}\r\n                </Tabs>\r\n                {mcRanges.map((mcRange, floor) => (\r\n                    <Box component=\"div\"\r\n                        role=\"tabpanel\"\r\n                        style={{ display: mcIdx !== floor ? 'none' : undefined }}\r\n                        id={`mc-tabpanel-${floor}`}\r\n                        aria-labelledby={`mc-tab-${floor}`}\r\n                        value={mcIdx}\r\n                        index={floor}\r\n                        key={floor}\r\n                        dir=\"ltr\"\r\n                        className={clsx(classes.mcTabpanel)}>\r\n                        {(mcIdx === floor) && mcRange.map((seq) => {\r\n                            const mcItem = mcInfo[seq];\r\n                            const mcIcon = MCPieceIcon(entry, mcItem);\r\n                            let ubItem = null;\r\n                            const ubSeq = Math.floor(seq / 10);\r\n                            if ([11, 21, 31, 41, 51].includes(seq)) {\r\n                                const ubIcon = (ubSeq === 5) ? `Mc_Unbind_6M_0${entry.Element}` : 'Mc_Unbind_Mana';\r\n                                const ubChecked = getUbChecked(ubSeq);\r\n                                ubItem = (\r\n                                    <Box className={clsx(classes.mcTabUb)} >\r\n                                        <svg className={clsx(classes.mcDeco, ubSeq === 5 && classes.mcDecoUb5)}>\r\n                                            <path d={(ubSeq < 5) ? MC_SVG_PATHS.dUb0 : MC_SVG_PATHS.dUb36} fill={ubChecked ? \"#3f51b5\" : ELEMENT_BG_COLORS.Null}></path>\r\n                                        </svg>\r\n                                        <Tooltip title={`Unbind ${ubSeq}`} aria-label={`ub-${ubSeq}`} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                            <Checkbox\r\n                                                name={`${id}-ub-${ubSeq}`}\r\n                                                onClick={handleUbCheck}\r\n                                                color=\"default\"\r\n                                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                                checked={ubChecked}\r\n                                                icon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                                checkedIcon={<img src={`${process.env.PUBLIC_URL}/manacircle/${ubIcon}.png`} alt={`ub-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                );\r\n                            }\r\n                            const seqMcTxt = `${seq}: ${mcIcon.txt}`;\r\n                            const nodeChecked = getMCChecked(seq);\r\n                            let mcDecoPath = MC_SVG_PATHS.d39;\r\n                            const seqR = seq % 10;\r\n                            if (seqR === 0){\r\n                                if (ubSeq === 7){\r\n                                    mcDecoPath = MC_SVG_PATHS.d3;\r\n                                } else if (ubSeq > 5){\r\n                                    mcDecoPath = MC_SVG_PATHS.d36;\r\n                                } else {\r\n                                    mcDecoPath = MC_SVG_PATHS.d03;\r\n                                }\r\n                            } else if (seqR === 1){\r\n                                if (ubSeq > 4){\r\n                                    mcDecoPath = MC_SVG_PATHS.d03;\r\n                                } else {\r\n                                    mcDecoPath = MC_SVG_PATHS.d36;\r\n                                }\r\n                            } else if (seqR === 3 && ubSeq < 5 && ubSeq > 0){\r\n                                mcDecoPath = MC_SVG_PATHS.d039;\r\n                            } else if (seqR === 5) {\r\n                                mcDecoPath = MC_SVG_PATHS.d69;\r\n                            } else if (seqR === 6) {\r\n                                mcDecoPath = MC_SVG_PATHS.d09;\r\n                            }\r\n                            return (\r\n                                <React.Fragment key={seq}>\r\n                                    {ubItem}\r\n                                    <Box>\r\n                                        <svg className={clsx(classes.mcDeco)}>\r\n                                            <path d={mcDecoPath} fill={nodeChecked ? \"#3f51b5\" : ELEMENT_BG_COLORS.Null}></path>\r\n                                        </svg>\r\n                                        <Tooltip title={seqMcTxt} aria-label={seqMcTxt} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                                            <Checkbox\r\n                                                name={`${id}-mc-${seq}`}\r\n                                                onClick={handleMCCheck}\r\n                                                color=\"default\"\r\n                                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                                checked={nodeChecked}\r\n                                                icon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                                checkedIcon={<img src={mcIcon.img} alt={`mc-${seq}`} className={clsx(classes.abilityIcon)} />}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                ))}\r\n                {have && <Box component=\"div\"\r\n                    role=\"tabpanel\"\r\n                    style={{ display: mcIdx !== mcRanges.length ? 'none' : undefined }}\r\n                    id={`mc-tabpanel-${mcRanges.length}`}\r\n                    aria-labelledby={`mc-tab-${mcRanges.length}`}\r\n                    value={mcIdx}\r\n                    index={mcRanges.length}\r\n                    key={mcRanges.length}\r\n                    dir=\"ltr\"\r\n                    className={clsx(classes.medalTabpanel)}>\r\n                    {MEDALS.map((medal, seq) => (\r\n                        <Checkbox\r\n                            key={medal}\r\n                            onClick={handleMedalCheck}\r\n                            checked={getMedalChecked(seq)}\r\n                            name={`medal-${seq}`}\r\n                            color=\"default\"\r\n                            classes={{ root: clsx(classes.abilityCheck) }}\r\n                            icon={<img src={`${process.env.PUBLIC_URL}/medal_off/${medal}.png`} alt={`medal-${seq}`} className={clsx(classes.medalIcon)} />}\r\n                            checkedIcon={<img src={`${process.env.PUBLIC_URL}/medal_on/${medal}.png`} alt={`medal-${seq}`} className={clsx(classes.medalIcon)}/>}\r\n                        />\r\n                    ))}\r\n                </Box>}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function standardCardIcon(category, id, count) {\r\n    return `${process.env.PUBLIC_URL}/${category}/${id}.png`\r\n}\r\n\r\nexport function DragonListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const cardIconFn = props.cardIconFn || standardCardIcon;\r\n    const classes = useStyles();\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const toggleEditing = (e) => { setEditing(!editing); }\r\n\r\n    const count = have ? have.c : '';\r\n    const validateCount = (e) => {\r\n        const nextC = parseInt(e.target.value);\r\n        if (isNaN(nextC) || nextC <= 0) { deleteHaving(id); }\r\n        else { updateHaving(id, { c: nextC }); }\r\n        e.target.focus();\r\n    }\r\n\r\n    const lcHaving = (e) => {\r\n        const dh = DEFAULT_HAVE[category][entry.Rarity];\r\n        const step = (count === '' || count < dh.c ? 1 : dh.c);\r\n        if (!have) { updateHaving(id, dh); }\r\n        else { updateHaving(id, { c: count + step }); }\r\n    }\r\n    const rcHaving = (e) => {\r\n        if (have) {\r\n            const nextC = count - 1;\r\n            if (nextC <= 0) { deleteHaving(id); }\r\n            else { updateHaving(id, { c: nextC }); }\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const CardIconDeco = () => {\r\n        if (editing || !have) { return <React.Fragment></React.Fragment>; }\r\n        const mlb = entry.MaxLimitBreak;\r\n        const mub = ((count - 1) / (mlb + 1)) >> 0;\r\n        const r = Math.max((count - 1) % (mlb + 1), 0);\r\n        console.log(count, mlb, r);\r\n        return (\r\n            <Grid container className={classes.unbindIcons} justify=\"center\">\r\n                {[0, 1, 2, 3].map((i) =>\r\n                    (<Grid key={i} item className={clsx(classes.ubIcon, (r >= 4 ? classes.ubM : (r > i ? classes.ubN : classes.ub0)))} />))}\r\n                {mlb === 5 && <Grid key={4} item className={clsx(classes.ubIcon, (r >= 5 ? classes.ubM2 : classes.ub02))} />}\r\n                {count > (mlb + 1) && <Grid item className={clsx(classes.ubIcon, classes.mubCount)}>{mub}</Grid>}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (<BaseListingItem\r\n        locale={locale}\r\n        entry={entry}\r\n        have={have}\r\n        lcHaving={lcHaving}\r\n        rcHaving={rcHaving}\r\n        editing={editing}\r\n        toggleEditing={toggleEditing}\r\n        cardIconUrl={cardIconFn(category, id, count)}\r\n        CardIconDeco={CardIconDeco}>\r\n        <TextField id={`count-${id}`} label={TextLabel[locale].COUNT} value={count} onInput={validateCount} />\r\n    </BaseListingItem>)\r\n}\r\n\r\nconst fullWeaponHave = (entry) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    if (entry.Passive) {\r\n        have.p = {};\r\n        for (let i of Object.keys(entry.Passive)) {\r\n            have.p[i] = true;\r\n        }\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneWeaponHave = (entry, fullWeapon) => {\r\n    const build = WeaponBuild[entry.Build];\r\n    if (fullWeapon && entry.Rarity === 6) {\r\n        const have = {b: {}};\r\n        for (const k in build){\r\n            if (k === '6') {\r\n                have.b[k] = 1;\r\n            } else {\r\n                have.b[k] = build[k].length;\r\n            }\r\n        }\r\n        return have;\r\n    } else if (build[5]) {\r\n        const unbindReq = Math.max(build[5].map((b) => b.UnbindReq));\r\n        const have = {\r\n            b: {\r\n                1: unbindReq,\r\n                5: build[5].length,\r\n                6: 1\r\n            }\r\n        }\r\n        if (build[2]) {\r\n            have.b[2] = Math.floor(Math.max(0, unbindReq - 1) / 4);\r\n        }\r\n        return have;\r\n    } else if (!build[6]) {\r\n        return fullWeaponHave(entry);\r\n    } else {\r\n        return { b: { 6: 1 } };\r\n    }\r\n}\r\n\r\nconst prereqWeaponHaves = (tempHaving, prereq, prereqHaves) => {\r\n    prereqHaves = prereqHaves || {};\r\n    for (let i of prereq.Create) {\r\n        if (!tempHaving[i]) {\r\n            prereqHaves[i] = { b: { 6: 1 } };\r\n        }\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[i].Prereq, prereqHaves);\r\n    }\r\n    if (prereq.FullUp) {\r\n        prereqHaves[prereq.FullUp] = fullWeaponHave(Weapon[prereq.FullUp]);\r\n        prereqHaves = prereqWeaponHaves(tempHaving, Weapon[prereq.FullUp].Prereq, prereqHaves);\r\n    }\r\n    return prereqHaves;\r\n}\r\n\r\nexport function WeaponListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have && have.b[2] && have.b[2] === 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"1\"]}.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Skins[\"0\"]}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = WeaponBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        // let tempHaving = updateHaving(id, newHave || doneWeaponHave(entry));\r\n        let tempHaving = updateHaving(id, newHave || { b: { 6: 1 } });\r\n        const prereqs = prereqWeaponHaves(tempHaving, entry.Prereq);\r\n        for (let i of Object.keys(prereqs)) {\r\n            tempHaving = updateHaving(i, prereqs[i], tempHaving);\r\n        }\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneWeaponHave(entry, have.b[1] >= 4);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            if (have.p) {\r\n                doneHave.p = have.p;\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            let tempHaving = deleteHaving(id);\r\n            for (let i of Object.keys(tempHaving)) {\r\n                const prereqs = prereqWeaponHaves({}, Weapon[i].Prereq);\r\n                if (prereqs[id]) {\r\n                    tempHaving = deleteHaving(i, tempHaving);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        if (piece === '1' && build[5]) {\r\n            have.b[5] = Math.min(have.b[5] || 0, build[5].reduce((acc, cur, idx) => {\r\n                return cur.UnbindReq > value ? acc : (idx + 1);\r\n            }, 0));\r\n        } else if (piece === '2') {\r\n            have.b[1] = Math.min(have.b[1] || 0, (value + 1) * 4);\r\n        } else {\r\n            const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n            have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        }\r\n        if (build[2] && piece !== '2') {\r\n            have.b[2] = Math.max(have.b[2] || 0, Math.floor(Math.max(have.b[1] - 1) / 4));\r\n        }\r\n        if (have.p) {\r\n            for (let p of Object.keys(have.p)) {\r\n                if (entry.Passive[p].UnbindReq > have.b[1]) {\r\n                    have.p[p] = false;\r\n                }\r\n            }\r\n        }\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n    const setAbilityValues = (p, checked, have) => {\r\n        if (!have.p) {\r\n            have.p = {}\r\n        }\r\n        have.p[p] = checked;\r\n        if (checked) {\r\n            have.b[1] = Math.max(have.b[1] || 0, entry.Passive[p].UnbindReq);\r\n        }\r\n        return have;\r\n    }\r\n    const handleAbilityCheck = (e) => {\r\n        const p = e.target.name.split('-').slice(-1);\r\n        const checked = e.target.checked;\r\n        if (have) {\r\n            updateHaving(id, setAbilityValues(p, checked, have));\r\n        } else {\r\n            const newHave = { b: { 6: 1 } };\r\n            createThisHaving(setAbilityValues(p, checked, newHave));\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = WeaponLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (<Box className={clsx(classes.mcIcon, have.b[1] === build[1].length ? classes.mcIconMaxed : (have.b[5] && classes.mcIconDone))}>\r\n                        {levelData.Level}\r\n                    </Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography variant=\"overline\" display=\"block\">{WeaponSeries[entry.Series][`Name${locale}`]}</Typography><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes[`Fg${ELEMENTS[entry.Element]}`] || classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n            {entry.Passive && (< DialogContent dividers>\r\n                {Object.keys(entry.Passive).map((p) => {\r\n                    const passive = entry.Passive[p];\r\n                    const abilityName = passive.Ability[`Name${locale}`];\r\n                    const iconPath = `${process.env.PUBLIC_URL}/ability/${passive.Ability.Icon}.png`;\r\n                    return (\r\n                        <Tooltip key={p} title={abilityName} aria-label={abilityName} placement=\"top\" classes={{ popper: clsx(classes.abilityCheckTooltip) }}>\r\n                            <Checkbox\r\n                                name={`${id}-passive-${p}`}\r\n                                onClick={handleAbilityCheck}\r\n                                color=\"default\"\r\n                                classes={{ root: clsx(classes.abilityCheck) }}\r\n                                checked={!!(have && have.p && have.p[p])}\r\n                                icon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon, classes.grayscale)} />}\r\n                                checkedIcon={<img src={iconPath} alt={abilityName} className={clsx(classes.abilityIcon)} />}\r\n                            />\r\n                        </Tooltip>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nexport function MaterialSummaryItem(props) {\r\n    const { m, count, name } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item>\r\n            <Card>\r\n                <CardMedia\r\n                    className={clsx(classes.cardCountIcon)}\r\n                    image={`${process.env.PUBLIC_URL}/material/${m}.png`}\r\n                    title={name} alt={name} >\r\n                </CardMedia>\r\n                <CardContent className={clsx(classes.cardCount)}>\r\n                    <Typography align=\"center\" className={clsx(classes.cardCountText)} display=\"block\">x {count}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport const fortMaxNum = (entry) => {\r\n    if (entry.NameEN === 'Rupie Mine') {\r\n        return 4;\r\n    }\r\n    if (entry.NameEN.endsWith('Altar') || entry.NameEN.endsWith('Dojo')) {\r\n        return 2;\r\n    }\r\n    return 1\r\n}\r\n\r\nexport function FortListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if (have) {\r\n        const maxHave = Math.max(...Object.values(have));\r\n        if (maxHave <= 0) {\r\n            deleteHaving(id);\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n        } else {\r\n            cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[maxHave - 1].Icon}.png`;\r\n        }\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.Detail[0].Icon}.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const maxLv = entry.Detail.length;\r\n    const maxNum = fortMaxNum(entry);\r\n\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            updateHaving(id, (new Array(maxNum)).fill(maxLv));\r\n        } else {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteHaving(id);\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            updateHaving(id, (new Array(maxNum)).fill(1));\r\n        } else {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const makeLevelChange = (idx) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                have[idx] = value;\r\n                updateHaving(id, have);\r\n            } else {\r\n                const newHave = (new Array(maxNum)).fill(0);\r\n                newHave[idx] = value;\r\n                updateHaving(id, newHave);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (Object.keys(have).map((key) => (<Box key={key} className={clsx(classes.circleIcon, classes[`circleIcon${key}`], (have[key] >= maxLv) && classes.circleIconMaxed)}>{have[key]}</Box>)))}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open} fullWidth={true}\r\n        >\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {Array(maxNum).fill(0).map((_, idx) => {\r\n                    const currentLevel = have ? have[idx] : 0;\r\n                    return (\r\n                        <Box key={idx}>\r\n                            <Typography id=\"level-slider\" gutterBottom>\r\n                                {`${cardName} ${(idx + 1)} - Lv.${currentLevel}`}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-level-${idx + 1}`}\r\n                                aria-labelledby=\"level-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={currentLevel}\r\n                                onChange={makeLevelChange(idx)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={maxLv}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n\r\nconst fullAmuletHave = (entry) => {\r\n    const build = AmuletBuild[entry.Build];\r\n    const have = {};\r\n    if (build) {\r\n        have.b = {};\r\n        for (let i of Object.keys(build)) {\r\n            have.b[i] = build[i].length;\r\n        }\r\n        have.b[6] += 1;\r\n    }\r\n    return have;\r\n}\r\n\r\nexport const doneAmuletHave = (entry, fullCopies) => {\r\n    const doneHave = fullAmuletHave(entry);\r\n    if (!fullCopies) {\r\n        doneHave.b[6] = 1;\r\n    }\r\n    return doneHave;\r\n}\r\n\r\nexport function AmuletListingItem(props) {\r\n    const { locale, id, entry, category, have, updateHaving, deleteHaving } = props;\r\n    const classes = useStyles();\r\n    const cardName = entry[`Name${locale}`];\r\n    let cardIconUrl = null;\r\n    if ((!entry.NoRefine) && have && have.b[1] && have.b[1] >= 2) {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_02.png`;\r\n    } else {\r\n        cardIconUrl = `${process.env.PUBLIC_URL}/${category}/${entry.BaseId}_01.png`;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => { setOpen(true); };\r\n    const handleClose = () => { setOpen(false); };\r\n\r\n    const build = AmuletBuild[entry.Build];\r\n\r\n    const createThisHaving = (newHave) => {\r\n        updateHaving(id, newHave || { b: { 6: 1 } });\r\n    }\r\n    const lcHaving = (e) => {\r\n        if (have) {\r\n            const doneHave = doneAmuletHave(entry, have.b[1] === 4);\r\n            for (let bi of Object.keys(have.b)) {\r\n                doneHave.b[bi] = Math.max(have.b[bi], doneHave.b[bi] || 0);\r\n            }\r\n            updateHaving(id, doneHave);\r\n        } else {\r\n            createThisHaving();\r\n        }\r\n    }\r\n    const deleteThisHaving = () => {\r\n        if (have) {\r\n            deleteHaving(id);\r\n        }\r\n    }\r\n    const rcHaving = (e) => {\r\n        deleteThisHaving();\r\n        e.preventDefault();\r\n    }\r\n    const handleDialogCheck = (e) => {\r\n        if (e.target.checked) {\r\n            createThisHaving();\r\n        } else {\r\n            deleteThisHaving();\r\n        }\r\n    }\r\n    const setBuildValues = (piece, value, have) => {\r\n        have.b[piece] = value;\r\n        // const unbindReq = build[piece][value - 1] ? build[piece][value - 1].UnbindReq : 0;\r\n        // have.b[1] = Math.max(have.b[1] || 0, unbindReq);\r\n        return have;\r\n    }\r\n    const makeBuildChange = (piece) => {\r\n        return (e, value) => {\r\n            if (have) {\r\n                if (piece === '6' && value === 0) {\r\n                    deleteThisHaving();\r\n                } else {\r\n                    updateHaving(id, setBuildValues(piece, value, have));\r\n                }\r\n            } else {\r\n                const newHave = { b: { 6: 1 } };\r\n                createThisHaving(setBuildValues(piece, value, newHave));\r\n            }\r\n        }\r\n    }\r\n\r\n    let levelData = { Level: 0, Mats: {} };\r\n    if (have) {\r\n        levelData = AmuletLevel[entry.Rarity][have.b[1] || 0];\r\n    }\r\n\r\n    return (<Grid item>\r\n        <Card className={clsx(classes.root, have && (classes[ELEMENTS[entry.Element]] || classes.Null))}>\r\n            <CardActionArea onClick={lcHaving} onContextMenu={rcHaving}>\r\n                <CardMedia\r\n                    className={clsx(classes.cardIcon)}\r\n                    image={cardIconUrl}\r\n                    title={cardName} alt={cardName} >\r\n                    {have && (\r\n                        <Box className={clsx(classes.mcIconAmulet, classes.mcIcon, have.b[1] === 4 && (have.b[6] === 4 ? classes.mcIconMaxed : classes.mcIconDone))}>\r\n                            {levelData.Level}</Box>\r\n                    )}\r\n                    <Box className={clsx(classes.amuletAbIcon)}><img alt={entry.AbIcon} src={`${process.env.PUBLIC_URL}/ability/${entry.AbIcon}.png`} /></Box>\r\n                    {entry.Union && (<Box className={clsx(classes.unionIcon)}><img alt={`Union_${entry.Union}`} src={`${process.env.PUBLIC_URL}/ui/${unionIcon(entry.Union)}.png`} /></Box>)}\r\n                </CardMedia>\r\n            </CardActionArea>\r\n            <CardContent className={clsx(classes.cardName)}>\r\n                <Button\r\n                    className={clsx(classes.cardNameText, locale !== 'EN' && classes.cardNameNoWrap)}\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                    endIcon={<AddIcon />}>\r\n                    {insertLinebreak(cardName, locale)}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n        <Dialog onClose={handleClose} aria-labelledby={`${category}-${id}-dialog`} open={open}>\r\n            <DialogTitle id={`${category}-${id}-dialog`} onClose={handleClose}>\r\n                <FormControlLabel\r\n                    control={<Checkbox name={`${id}-create`}\r\n                        checked={!!(have)}\r\n                        onClick={handleDialogCheck}\r\n                        color=\"default\"\r\n                        icon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon, classes.grayscale)} />}\r\n                        checkedIcon={<img src={cardIconUrl} alt={cardName} className={clsx(classes.dialogIcon)} />} />}\r\n                    label={<Box><Typography>{cardName}</Typography></Box>}\r\n                />\r\n            </DialogTitle>\r\n            {build && (<DialogContent dividers>\r\n                {Object.keys(build).map((piece) => {\r\n                    const buildInfo = build[piece];\r\n                    const buildpiece = TextLabel[locale][`BUILDUP_${piece}`];\r\n                    const buildvalue = (have && have.b) ? (have.b[piece] || 0) : 0;\r\n                    return (\r\n                        <Box key={piece}>\r\n                            <Typography id=\"build-slider\" gutterBottom>\r\n                                {buildpiece + ' - ' + buildvalue}\r\n                            </Typography>\r\n                            <Slider\r\n                                name={`${id}-build-${piece}`}\r\n                                aria-labelledby=\"build-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={buildvalue}\r\n                                onChange={makeBuildChange(piece)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={piece === '6' ? 4 : buildInfo.length}\r\n                                classes={{ colorPrimary: classes.FgNull }}\r\n                            />\r\n                        </Box>\r\n                    )\r\n                })}\r\n            </DialogContent>)}\r\n        </Dialog>\r\n    </Grid >)\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport TextLabel from '../data/locale.json';\r\n\r\nimport Chara from '../data/chara.json';\r\nimport ManaCircle from '../data/manacircle.json';\r\nimport CharaLimitBreak from '../data/charalimitbreak.json';\r\n\r\nimport Weapon from '../data/weapon.json';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\nimport WeaponLevel from '../data/weaponlevel.json';\r\n\r\nimport Amulet from '../data/amulet.json';\r\nimport AmuletBuild from '../data/amuletbuild.json';\r\nimport AmuletLevel from '../data/amuletlevel.json';\r\n\r\nimport Fort from '../data/fort.json';\r\nimport Material from '../data/material.json';\r\n\r\nimport { ELEMENTS, WEAPONS, FORMS, unionIcon } from '../data/Mapping';\r\nimport { doneWeaponHave, doneAmuletHave, doneCharaHave, fortMaxNum, MaterialSummaryItem } from './ListingItems';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    sortSelect: {\r\n        width: 120,\r\n    },\r\n    radioGroup: {\r\n        display: 'block',\r\n        marginLeft: 5\r\n    },\r\n    fieldsetTitle: {\r\n        fontSize: '0.7em',\r\n        textTransform: 'uppercase',\r\n        marginBottom: 5\r\n    },\r\n    radioRoot: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    radioIcon: {\r\n        height: 25\r\n    },\r\n    unchecked: {\r\n        opacity: 0.5\r\n    },\r\n    availButton: {\r\n        width: '100%',\r\n        maxWidth: 200,\r\n        textTransform: 'none'\r\n    },\r\n    availChecks: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    costTitle: {\r\n        minHeight: '2.5em',\r\n        '& img': {\r\n            width: 30,\r\n            verticalAlign: 'middle'\r\n        }\r\n    },\r\n    maxToggle: {\r\n        float: \"right\",\r\n        position: \"relative\",\r\n        top: -4\r\n    },\r\n    tristateCheck: {\r\n        width: 90,\r\n        height: 30,\r\n    },\r\n    tristateCheckLabel: {\r\n        lineHeight: 1,\r\n    }\r\n});\r\n\r\n\r\nfunction WeaponMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [maxWeapon, setMaxWeapon] = React.useState(\"Weapons Maxed\");\r\n    const isMaxWeapon = maxWeapon === \"Weapons Maxed\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleMaxWeapon = (event) => {\r\n        if (isMaxWeapon) {\r\n            setMaxWeapon(\"Weapon Bonus Only\");\r\n        } else {\r\n            setMaxWeapon(\"Weapons Maxed\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Weapon[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneWeaponHave(entry, entry.Rarity === 6 && isMaxWeapon);\r\n        const build = WeaponBuild[entry.Build];\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (!build[bi] || doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? ((bi === '6') ? currHave.b[bi] - 1 : currHave.b[bi]) : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = WeaponLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += diff;\r\n                    }\r\n                } else {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let m of Object.keys(entry.Mats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += entry.Mats[m];\r\n            }\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (!build[bi] || bi === '6') { continue; }\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!totalMats[m]) { totalMats[m] = 0; }\r\n                        totalMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = WeaponLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!totalMats[m]) { totalMats[m] = 0; }\r\n                totalMats[m] += doneLevelMats[m];\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleMaxWeapon}\r\n                        name=\"maxWeapon\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.maxToggle)}\r\n                    >{maxWeapon}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction FortMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    let totalCost = 0;\r\n    let totalTime = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Fort[id];\r\n        const currHave = having[id];\r\n        let currIter = null;\r\n        if (currHave) {\r\n            currIter = Object.values(currHave);\r\n        } else {\r\n            currIter = Array(fortMaxNum(entry)).fill(0);\r\n        }\r\n        for (const curLv of currIter) {\r\n            for (const detail of entry.Detail.slice(curLv)) {\r\n                totalCost += detail.Cost;\r\n                totalTime += detail.Time;\r\n                for (let m of Object.keys(detail.Mats)) {\r\n                    if (!totalMats[m]) { totalMats[m] = 0; }\r\n                    totalMats[m] += detail.Mats[m];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/rupee.png`} alt=\"cost\" />\r\n                    <Typography display=\"inline\" gutterBottom> {totalCost.toLocaleString()}</Typography>\r\n                    <QueryBuilderIcon style={{ verticalAlign: 'middle', marginLeft: 4 }} />\r\n                    <Typography display=\"inline\" gutterBottom> {totalTime.toLocaleString()}s</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction AmuletMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullCopies, setFullCopies] = React.useState(\"4 Copies\");\r\n    const isFullCopies = fullCopies === \"4 Copies\";\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const toggleFullCopies = (event) => {\r\n        if (isFullCopies) {\r\n            setFullCopies(\"1 Copy\");\r\n        } else {\r\n            setFullCopies(\"4 Copies\");\r\n        }\r\n    }\r\n\r\n    let totalCost = 0;\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const entry = Amulet[id];\r\n        const currHave = having[id];\r\n        const doneHave = doneAmuletHave(entry, isFullCopies);\r\n        const build = AmuletBuild[entry.Build];\r\n        const entryMats = {};\r\n        if (currHave) {\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                if (doneHave.b[bi] <= currHave.b[bi]) { continue; }\r\n                for (const bs of build[bi].slice(currHave.b[bi] ? ((bi === '6') ? currHave.b[bi] -1 : currHave.b[bi]) : 0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const currLevelMats = AmuletLevel[entry.Rarity][currHave.b[1] || 0].Mats;\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (currLevelMats[m]) {\r\n                    const diff = doneLevelMats[m] - currLevelMats[m];\r\n                    if (diff > 0) {\r\n                        entryMats[m] = diff;\r\n                    }\r\n                } else {\r\n                    entryMats[m] = doneLevelMats[m];\r\n                }\r\n            }\r\n        } else {\r\n            totalCost += entry.Cost;\r\n            for (let bi of Object.keys(doneHave.b)) {\r\n                for (const bs of build[bi].slice(0, doneHave.b[bi])) {\r\n                    totalCost += bs.Cost;\r\n                    for (let m of Object.keys(bs.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += bs.Mats[m];\r\n                    }\r\n                }\r\n            }\r\n            const doneLevelMats = AmuletLevel[entry.Rarity][doneHave.b[1] || 0].Mats;\r\n            for (let m of Object.keys(doneLevelMats)) {\r\n                if (!entryMats[m]) { entryMats[m] = 0; }\r\n                entryMats[m] += doneLevelMats[m];\r\n            }\r\n        }\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />\r\n                    <Typography display=\"inline\" gutterBottom>   {totalCost.toLocaleString()}</Typography>\r\n                    <Button\r\n                        onClick={toggleFullCopies}\r\n                        name=\"fullCopies\"\r\n                        variant=\"outlined\"\r\n                        className={clsx(classes.maxToggle)}\r\n                    >{fullCopies}</Button>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction CharaMaterialSummation(props) {\r\n    const { locale, having, visible } = props;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleOpen = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n    const totalCosts = {Mana: 0, Eldwater: 0};\r\n    const totalMats = {};\r\n    for (let id of visible) {\r\n        const currHave = having[id];\r\n        if (currHave && (currHave.no === undefined || currHave.ub === undefined)) { continue; }\r\n        if (!currHave) { continue; }\r\n        const entry = Chara[id];\r\n        const doneHave = doneCharaHave(entry, 5);\r\n        const mcInfo = ManaCircle[entry.MCName];\r\n        const clbInfo = CharaLimitBreak[entry.LimitBreak];\r\n        const entryMats = {};\r\n        const useGrow = entry.GrowEnd && Date.now() < entry.GrowEnd;\r\n\r\n        // unbind mats\r\n        if (useGrow) { entryMats['Grow'] = 0; }\r\n        for (let ub = currHave.ub + 1; ub <= doneHave.ub; ub += 1) {\r\n            if (useGrow && clbInfo[ub].Grow){\r\n                entryMats['Grow'] += clbInfo[ub].Grow;\r\n            } else {\r\n                for (let m of Object.keys(clbInfo[ub].Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += clbInfo[ub].Mats[m];\r\n                }\r\n            }\r\n        }\r\n        if (entry.Rarity < 4 && currHave.ub < 3){\r\n            totalCosts.Eldwater += 2500;\r\n        }\r\n        if (entry.Rarity < 5 && currHave.ub < 4){\r\n            totalCosts.Eldwater += 25000;\r\n        }\r\n\r\n        const calcNodeMats = (n) => {\r\n            const mcItem = mcInfo[n];\r\n            if (useGrow && mcItem.Mats.Grow){\r\n                entryMats['Grow'] += mcItem.Mats.Grow;\r\n            } else {\r\n                totalCosts.Mana += mcItem.Mana;\r\n                for (let m of Object.keys(mcItem.Mats)) {\r\n                    if (!entryMats[m]) { entryMats[m] = 0; }\r\n                    entryMats[m] += mcItem.Mats[m];\r\n                }\r\n                const mcEle = mcItem.Ele[entry.MCEle];\r\n                if (mcEle){\r\n                    totalCosts.Eldwater += mcEle.Eldwater;\r\n                    for (let m of Object.keys(mcEle.Mats)) {\r\n                        if (!entryMats[m]) { entryMats[m] = 0; }\r\n                        entryMats[m] += mcEle.Mats[m];\r\n                    }    \r\n                }\r\n            }\r\n        }\r\n        // mc node mats\r\n        if (currHave.ub === doneHave.ub){\r\n            for (let n of doneHave.no.filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }\r\n        } else {\r\n            for (let n of Array.from({ length: (currHave.ub < 5 ? 10 : 20) }, (_, i) => i + 1).filter((n) => !(currHave.no.includes(n)))) {\r\n                calcNodeMats(n + currHave.ub * 10);\r\n            }\r\n            for (let n = (currHave.ub + 1) * 10; n < doneHave.ub * 10; n += 1) {\r\n                calcNodeMats(n);\r\n            }\r\n            for (let n of doneHave.no) {\r\n                calcNodeMats(n + doneHave.ub * 10);\r\n            }    \r\n        }\r\n\r\n        for (let m of Object.keys(entryMats)) {\r\n            const tm = entry[m] ? entry[m] : m;\r\n            if (!totalMats[tm]) { totalMats[tm] = 0; }\r\n            totalMats[tm] += entryMats[m];\r\n        }\r\n    }\r\n    const sorted = Object.keys(totalMats).sort((a, b) => (Material[a].SortId - Material[b].SortId));\r\n\r\n    return (\r\n        <Grid item>\r\n            <Button onClick={toggleOpen(true)} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].MATS}</Button>\r\n            <Dialog anchor={'bottom'} open={open} onClose={toggleOpen(false)} maxWidth=\"lg\">\r\n                <DialogContent className={clsx(classes.costTitle)}>\r\n                    <Typography display=\"inline\" gutterBottom><img src={`${process.env.PUBLIC_URL}/ui/mana.png`} alt=\"mana\" />   {totalCosts.Mana.toLocaleString()}    <img src={`${process.env.PUBLIC_URL}/ui/eldwater.png`} alt=\"eldwater\" />   {totalCosts.Eldwater.toLocaleString()}</Typography>\r\n                </DialogContent>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                        {sorted.map((m) => (\r\n                            <MaterialSummaryItem\r\n                                key={m}\r\n                                m={m}\r\n                                count={totalMats[m]}\r\n                                name={Material[m][`Name${locale}`]}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nfunction ListingControls(props) {\r\n    const {\r\n        locale, minRarity, maxRarity,\r\n        sort, handleSort, sortOptions,\r\n        order, toggleOrder,\r\n        majorityHaving, toggleAllHaving,\r\n        addFilter, removeFilter, modifyFilter,\r\n        filters, radioFilters,\r\n        availabilities, series,\r\n        storeKey, having, visible\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    const [haveState, setHaveState] = React.useState(filters.ifHave ? 'HAVE' : (filters.ifNotHave ? 'NOT_HAVE' : 'ALL'));\r\n    const nextHaveState = (e) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters['ifHave'];\r\n        delete newFilters['ifNotHave'];\r\n        switch (haveState) {\r\n            case 'ALL':\r\n                setHaveState('HAVE');\r\n                newFilters['ifHave'] = true;\r\n                break;\r\n            case 'HAVE':\r\n                setHaveState('NOT_HAVE');\r\n                newFilters['ifNotHave'] = true;\r\n                break;\r\n            case 'NOT_HAVE':\r\n            default:\r\n                setHaveState('ALL');\r\n                break;\r\n        }\r\n        modifyFilter(newFilters);\r\n    }\r\n\r\n    const [maxedState, setMaxedState] = React.useState(filters.ifMaxed ? 'MAXED' : (filters.ifNotMaxed ? 'NOT_MAXED' : 'ALL'));\r\n    const nextMaxedState = (e) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters['ifMaxed'];\r\n        delete newFilters['ifNotMaxed'];\r\n        switch (maxedState) {\r\n            case 'ALL':\r\n                setMaxedState('MAXED');\r\n                newFilters['ifMaxed'] = true;\r\n                break;\r\n            case 'MAXED':\r\n                setMaxedState('NOT_MAXED');\r\n                newFilters['ifNotMaxed'] = true;\r\n                break;\r\n            case 'NOT_MAXED':\r\n            default:\r\n                setMaxedState('ALL');\r\n                break;\r\n        }\r\n        modifyFilter(newFilters);\r\n    }\r\n\r\n    const radioFilterValues = {\r\n        'Element': ELEMENTS,\r\n        'Weapon': WEAPONS,\r\n        \"Form\": FORMS,\r\n        \"Union\": [...Array(12).keys()].reduce((res, union) => {\r\n            res[union] = unionIcon(union);\r\n            return res;\r\n        }, {}),\r\n    }\r\n    if (minRarity && maxRarity) {\r\n        radioFilterValues[\"Rarity\"] = [...Array((maxRarity + 1) - minRarity).keys()].reduce((res, offset) => {\r\n            const rarity = minRarity + offset;\r\n            res[rarity] = `${rarity}_Star`;\r\n            return res;\r\n        }, { 0: '0_Star' })\r\n    }\r\n    const handleRadioFilter = (e) => {\r\n        if (e.target.value === \"0\") { removeFilter(e.target.name); }\r\n        else { addFilter(e.target.name, e.target.value); }\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n    const handleClose = () => { setAnchorEl(null); };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleAvail = (e) => {\r\n        let nextAvail = filters.Availability || [];\r\n        if (e.target.checked) { nextAvail.push(e.target.name); }\r\n        else {\r\n            const index = nextAvail.indexOf(e.target.name);\r\n            if (index >= 0) { nextAvail.splice(index, 1); }\r\n        }\r\n        if (nextAvail.length === 0) { removeFilter('Availability'); }\r\n        else { addFilter('Availability', nextAvail); }\r\n    }\r\n    const handleSeries = (e) => {\r\n        let nextSeries = filters.Series || [];\r\n        if (e.target.checked) { nextSeries.push(e.target.name); }\r\n        else {\r\n            const index = nextSeries.indexOf(e.target.name);\r\n            if (index >= 0) { nextSeries.splice(index, 1); }\r\n        }\r\n        if (nextSeries.length === 0) { removeFilter('Series'); }\r\n        else { addFilter('Series', nextSeries); }\r\n    }\r\n\r\n    const clearAvail = (e) => { removeFilter('Availability'); }\r\n    const clearSeries = (e) => { removeFilter('Series'); }\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\" wrap=\"wrap\">\r\n                <Grid item>\r\n                    <Checkbox\r\n                        checked={majorityHaving}\r\n                        onChange={toggleAllHaving} color=\"primary\"\r\n                        icon={<SelectAllIcon fontSize=\"large\" />}\r\n                        checkedIcon={<SelectAllIcon fontSize=\"large\" />}\r\n                    />\r\n                    <FormControl className={classes.sortSelect}>\r\n                        <InputLabel>{TextLabel[locale].SORT_BY}</InputLabel>\r\n                        <Select\r\n                            value={sort}\r\n                            onChange={handleSort}\r\n                            className={classes.select}>\r\n                            {sortOptions.map((so) => (<MenuItem value={so} key={so}>{TextLabel[locale][so.slice(2).toUpperCase()]}</MenuItem>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton onClick={toggleOrder} size=\"small\">{order === 'ASC' ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}</IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel disabled component=\"legend\" className={classes.fieldsetTitle}>{TextLabel[locale].HAVE + '/' + (locale === 'EN' ? 'NOT' : TextLabel[locale].NOT_HAVE)}</FormLabel>\r\n                        <FormControlLabel control={<Checkbox checked={!!(filters.ifHave)} indeterminate={!(filters.ifHave || filters.ifNotHave)} onChange={nextHaveState} color=\"primary\" />} label={TextLabel[locale][haveState]} className={clsx(classes.tristateCheck)} classes={{label: clsx(classes.tristateCheckLabel)}} />\r\n                    </FormControl>\r\n                    {!(filters.ifNotHave) && \r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel disabled component=\"legend\" className={classes.fieldsetTitle}>{TextLabel[locale].MAXED + '/' + (locale === 'EN' ? 'NOT' : TextLabel[locale].NOT_MAXED)}</FormLabel>\r\n                        <FormControlLabel control={<Checkbox checked={!!(filters.ifMaxed)} indeterminate={!(filters.ifMaxed || filters.ifNotMaxed)} onChange={nextMaxedState} color=\"primary\" />} label={TextLabel[locale][maxedState]} className={clsx(classes.tristateCheck)} classes={{label: clsx(classes.tristateCheckLabel)}} />\r\n                    </FormControl>}\r\n                </Grid>\r\n                {radioFilters.map((rf) => (\r\n                    <Grid item key={rf}>\r\n                        <FormControl component=\"fieldset\" className={classes.radioGroup}>\r\n                            <FormLabel disabled component=\"legend\" className={classes.fieldsetTitle}>{TextLabel[locale][rf.toUpperCase()]}</FormLabel>\r\n                            <RadioGroup aria-label={rf} name={rf} value={filters[rf] ? filters[rf].toString() : \"0\"} row onChange={handleRadioFilter.bind(this)}>\r\n                                {Object.keys(radioFilterValues[rf]).map((v) => (\r\n                                    <Radio\r\n                                        key={v}\r\n                                        className={classes.radioRoot}\r\n                                        color=\"default\"\r\n                                        value={v}\r\n                                        icon={<img alt={radioFilterValues[rf][v]} className={clsx(classes.radioIcon, classes.unchecked)} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />}\r\n                                        checkedIcon={<img alt={radioFilterValues[rf][v]} className={classes.radioIcon} src={`${process.env.PUBLIC_URL}/ui/${radioFilterValues[rf][v]}.png`} />} />\r\n                                ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>))}\r\n                {availabilities && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].AVAILABILITY}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearAvail}>Clear</Button>\r\n                                {availabilities.map((av) => (\r\n                                    <FormControlLabel key={av}\r\n                                        control={<Checkbox onChange={handleAvail.bind(this)} name={av} checked={Boolean(filters.Availability && filters.Availability.includes(av))} color=\"primary\" />}\r\n                                        label={TextLabel[locale][av] || av} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {series && (\r\n                    <Grid item>\r\n                        <Button onClick={handleClick} variant=\"outlined\" className={classes.availButton}>{TextLabel[locale].SERIES}</Button>\r\n                        <Popover\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}>\r\n                            <FormGroup className={classes.availChecks}>\r\n                                <Button onClick={clearSeries}>Clear</Button>\r\n                                {Object.keys(series).map((sr) => (\r\n                                    <FormControlLabel key={sr}\r\n                                        control={<Checkbox onChange={handleSeries.bind(this)} name={sr} checked={Boolean(filters.Series && filters.Series.includes(sr))} color=\"primary\" />}\r\n                                        label={series[sr][`Name${locale}`]} />\r\n                                ))}\r\n                            </FormGroup>\r\n                        </Popover>\r\n                    </Grid>\r\n                )}\r\n                {(storeKey === 'chara') && (<CharaMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'amulet') && (<AmuletMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'weapon') && (<WeaponMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n                {(storeKey === 'fort') && (<FortMaterialSummation locale={locale} having={having} visible={visible} />)}\r\n            </Grid>\r\n        </AppBar >\r\n    )\r\n}\r\n\r\nexport default ListingControls;","import React, { Fragment, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ListingControls from './ListingControls';\r\nimport { DEFAULT_HAVE } from '../data/Mapping';\r\nimport TextLabel from '../data/locale.json';\r\nimport { doneWeaponHave, doneAmuletHave, doneCharaHave, fortMaxNum } from './ListingItems';\r\nimport WeaponBuild from '../data/weaponbuild.json';\r\n\r\nconst weaponSeriesSortOrder = {\r\n    4: -6,\r\n    3: -5,\r\n    5: -4,\r\n    2: -3,\r\n    1: -2,\r\n    6: -1,\r\n}\r\n\r\nconst SortMethods = {\r\n    byID: (entries, having) => (Object.keys(entries)),\r\n    byNameEN: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].NameEN.localeCompare(entries[b].NameEN))),\r\n    byNameJP: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].NameJP.localeCompare(entries[b].NameJP))),\r\n    byNameCN: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].NameCN.localeCompare(entries[b].NameCN))),\r\n    byElement: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon || entries[b].Rarity - entries[a].Rarity || b.localeCompare(a))),\r\n    byWeapon: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].Weapon - entries[b].Weapon || entries[a].Element - entries[b].Element || entries[b].Rarity - entries[a].Rarity || b.localeCompare(a))),\r\n    byRarity: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    bySeries: (entries, having) => Object.keys(entries).sort((a, b) => (weaponSeriesSortOrder[entries[a].Series] - weaponSeriesSortOrder[entries[b].Series] || entries[a].Rarity - entries[b].Rarity || entries[a].Element - entries[b].Element || entries[a].Weapon - entries[b].Weapon)),\r\n    byType: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].Type - entries[b].Type || a - b)),\r\n    byForm: (entries, having) => Object.keys(entries).sort((a, b) => (entries[a].Form - entries[b].Form || entries[a].Rarity - entries[b].Rarity || a - b)),\r\n    byMC: (entries, having) => Object.keys(entries).sort((a, b) => {\r\n        const haveA = having[a];\r\n        const haveB = having[b];\r\n        if (!haveA && !haveB){ return 0; }\r\n        if (!haveA){ return 0; }\r\n        if (!haveB){ return -100; }\r\n        return haveA.ub - haveB.ub || haveA.no.length - haveB.no.length;\r\n    }),\r\n    byMC_DSC: (entries, having) => Object.keys(entries).sort((a, b) => {\r\n        const haveA = having[a];\r\n        const haveB = having[b];\r\n        if (!haveA && !haveB){ return 0; }\r\n        if (!haveA){ return 0; }\r\n        if (!haveB){ return -100; }\r\n        return haveB.ub - haveA.ub || haveB.no.length - haveA.no.length;\r\n    }),\r\n}\r\nconst compareHaveItem = (valueA, valueB) => {\r\n    if (Array.isArray(valueA)){\r\n        // heurstic for maxed manacircles\r\n        return valueA.length === valueB.length;\r\n    }\r\n    return valueA >= valueB;\r\n}\r\nconst ifMaxedEntry = (have, entry, storeKey) => {\r\n    if (!have){ return false; }\r\n    let maxedHave = null;\r\n    switch (storeKey) {\r\n        case 'fort':\r\n            return entry.Detail.length === Math.min(...Object.values(have));\r\n        case 'chara':\r\n            maxedHave = doneCharaHave(entry, 5);\r\n            break\r\n        case 'amulet':\r\n            maxedHave = doneAmuletHave(entry, true);\r\n            break;\r\n        case 'weapon':\r\n            maxedHave = doneWeaponHave(entry, true);\r\n            break;\r\n        case 'dragon':\r\n        default:\r\n            maxedHave = { c: entry.MaxLimitBreak + 1 };\r\n            break;\r\n    }\r\n    if (maxedHave.b){\r\n        for (const key of Object.keys(maxedHave.b)) {\r\n            if (!compareHaveItem(have.b[key], maxedHave.b[key])){ return false; }\r\n        }    \r\n    } else {\r\n        for (const key of Object.keys(maxedHave)) {\r\n            if (!compareHaveItem(have[key], maxedHave[key])){ return false; }\r\n        }    \r\n    }\r\n    return true;\r\n}\r\nconst CheckFilterMethods = {\r\n    ifHave: (have, entry, storeKey) => (have),\r\n    ifNotHave: (have, entry, storeKey) => (!have),\r\n    ifMaxed: ifMaxedEntry,\r\n    ifNotMaxed: (have, entry, storeKey) => {\r\n        return !(ifMaxedEntry(have, entry, storeKey));\r\n    }\r\n}\r\n\r\nconst loadLocalObj = (storeKey, init) => {\r\n    const saved = localStorage.getItem(storeKey);\r\n    return (saved ? JSON.parse(saved) : init || {});\r\n}\r\n\r\nconst saveLocalObj = (storeKey, obj) => {\r\n    localStorage.setItem(storeKey, JSON.stringify(obj));\r\n}\r\n\r\nfunction Listing(props) {\r\n    const {\r\n        locale, entries, availabilities, series,\r\n        storeKey, cardIconFn, minRarity, maxRarity,\r\n        sortDefault, sortOptions, radioFilters, ItemComponent\r\n    } = props;\r\n\r\n    const fullStoreKey = `dl-collection-${storeKey}`;\r\n\r\n    const [having, setHaving] = useState(loadLocalObj(fullStoreKey));\r\n    const updateHaving = (id, changes, tempHaving) => {\r\n        const newHaving = {\r\n            ...(tempHaving || having),\r\n            [id]: { ...having[id], ...changes }\r\n        };\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n    const deleteHaving = (id, tempHaving) => {\r\n        const newHaving = { ...(tempHaving || having) };\r\n        delete newHaving[id];\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n        return newHaving;\r\n    }\r\n\r\n    const storeSortKey = `${fullStoreKey}-sorting`;\r\n    const [sort, setSort] = useState(localStorage.getItem(storeSortKey) || sortDefault || 'byElement');\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value);\r\n        localStorage.setItem(storeSortKey, e.target.value);\r\n    }\r\n    const storeSortOrderKey = `${fullStoreKey}-sorting-order`;\r\n    const [order, setOrder] = useState(localStorage.getItem(storeSortOrderKey) || 'ASC');\r\n    const toggleOrder = (e) => {\r\n        const nextOrder = (order === 'ASC' ? 'DSC' : 'ASC');\r\n        setOrder(nextOrder);\r\n        localStorage.setItem(storeSortOrderKey, nextOrder);\r\n    }\r\n    const sorted = (entries, having) => {\r\n        let sortedId = null;\r\n        if (sort === 'byName') {\r\n            sortedId = SortMethods[`byName${locale}`](entries, having);\r\n        } else if (sort === 'byMC' && order === 'DSC') {\r\n            return SortMethods['byMC_DSC'](entries, having);\r\n        } else {\r\n            sortedId = SortMethods[sort](entries, having);\r\n        }\r\n        if (order === 'DSC') {\r\n            sortedId = sortedId.reverse();\r\n        }\r\n        return sortedId;\r\n    }\r\n\r\n    const storeFilterKey = `${fullStoreKey}-filters`;\r\n    const [filters, setFilters] = useState(loadLocalObj(storeFilterKey));\r\n    const addFilter = (filterType, target) => {\r\n        let newFilters = { ...filters };\r\n        if (CheckFilterMethods[filterType]) {\r\n            newFilters[filterType] = true;\r\n        } else if (radioFilters.includes(filterType)) {\r\n            newFilters[filterType] = parseInt(target);\r\n        } else if (filterType === 'Availability' || filterType === 'Series') {\r\n            newFilters[filterType] = target;\r\n        }\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const removeFilter = (filterType) => {\r\n        const newFilters = { ...filters };\r\n        delete newFilters[filterType];\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const modifyFilter = (newFilters) => {\r\n        setFilters(newFilters);\r\n        saveLocalObj(storeFilterKey, newFilters);\r\n    }\r\n    const checkFilter = (id) => {\r\n        const entry = entries[id];\r\n        const have = having[id];\r\n        for (const f of Object.keys(filters)) {\r\n            if (CheckFilterMethods[f] && !CheckFilterMethods[f](have, entry, storeKey)) {\r\n                return false;\r\n            } else if (radioFilters.includes(f) && entry[f] !== filters[f]) {\r\n                return false;\r\n            } else if (f === 'Availability' && (!entry.Availability || entry.Availability.every((a) => (!(filters.Availability.includes(a)))))) {\r\n                return false;\r\n            } else if (f === 'Series' && (!filters.Series.includes(entry.Series.toString()))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const visibleEntries = sorted(entries, having).filter(checkFilter);\r\n    const visibleHave = visibleEntries.reduce((res, id) => (res + (having[id] ? 1 : 0)), 0);\r\n    const majorityHaving = having && Object.keys(having).length > 0 && visibleHave > (visibleEntries.length / 2 >> 0);\r\n    const toggleAllHaving = () => {\r\n        let newHaving = { ...having };\r\n        if (!majorityHaving) {\r\n            for (const id of visibleEntries) {\r\n                switch (storeKey) {\r\n                    case 'chara':\r\n                        newHaving[id] = doneCharaHave(entries[id]);\r\n                        break\r\n                    case 'amulet':\r\n                        newHaving[id] = doneAmuletHave(entries[id]);\r\n                        break;\r\n                    case 'weapon':\r\n                        newHaving[id] = doneWeaponHave(entries[id]);\r\n                        break;\r\n                    case 'fort':\r\n                        newHaving[id] = (new Array(fortMaxNum(entries[id]))).fill(entries[id].Detail.length);\r\n                        break;\r\n                    case 'dragon':\r\n                    default:\r\n                        newHaving[id] = having[id] || DEFAULT_HAVE[storeKey][entries[id].Rarity];\r\n                        break;\r\n                }\r\n            }\r\n        } else {\r\n            for (const id of visibleEntries) {\r\n                delete newHaving[id];\r\n            }\r\n        }\r\n        setHaving(newHaving);\r\n        saveLocalObj(fullStoreKey, newHaving);\r\n    }\r\n\r\n    const statLabel = (title) => {\r\n        let count = visibleHave;\r\n        let total = visibleEntries.length;\r\n        if (storeKey === 'weapon') {\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? (having[id].b[5] ? 1 : 0) : 0)), 0);\r\n            total = visibleEntries.reduce((res, id) => (res + (WeaponBuild[entries[id].Build][5] ? 1 : 0)), 0);\r\n        } else if (storeKey === 'fort') {\r\n            const halidomVisible = visibleEntries.includes(\"100101\");\r\n            const halidom = (halidomVisible && having[100101]) ? having[100101][0] : 0;\r\n            count = visibleEntries.reduce((res, id) => (res + (having[id] ? Object.values(having[id]).reduce((a, b) => a + b, 0) : 0)), 0) - halidom;\r\n            total = visibleEntries.reduce((res, id) => (res + (fortMaxNum(entries[id]) * entries[id].Detail.length)), 0) - (halidomVisible ? 11 : 0);\r\n        }\r\n        const p = ((100 * count / total) >> 0)\r\n        return `${title}: ${count} / ${total} (${p}%)`\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListingControls\r\n                locale={locale}\r\n                minRarity={minRarity}\r\n                maxRarity={maxRarity}\r\n                sort={sort}\r\n                handleSort={handleSort}\r\n                sortOptions={sortOptions}\r\n                order={order}\r\n                toggleOrder={toggleOrder}\r\n                majorityHaving={majorityHaving}\r\n                toggleAllHaving={toggleAllHaving}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                modifyFilter={modifyFilter}\r\n                filters={filters}\r\n                radioFilters={radioFilters}\r\n                availabilities={availabilities}\r\n                series={series}\r\n                storeKey={storeKey}\r\n                having={having}\r\n                visible={visibleEntries}\r\n            />\r\n            <Typography component=\"h2\" gutterBottom>{statLabel(TextLabel[locale].COMPLETION)}</Typography>\r\n            <Grid container spacing={1} alignItems=\"flex-start\" justify=\"flex-start\">\r\n                {visibleEntries.map((id) => (\r\n                    <ItemComponent\r\n                        key={id}\r\n                        locale={locale}\r\n                        id={id}\r\n                        entry={entries[id]}\r\n                        category={storeKey}\r\n                        cardIconFn={cardIconFn}\r\n                        have={having[id]}\r\n                        updateHaving={updateHaving}\r\n                        deleteHaving={deleteHaving}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Listing from './view/Listing';\r\nimport { CharaListingItem, DragonListingItem, WeaponListingItem, FortListingItem, AmuletListingItem, } from './view/ListingItems';\r\n\r\nimport TextLabel from './data/locale.json';\r\nimport Chara from './data/chara.json';\r\nimport Dragon from './data/dragon.json';\r\nimport Weapon from './data/weapon.json';\r\nimport Amulet from './data/amulet.json';\r\nimport Availabilities from './data/availabilities.json';\r\nimport WeaponSeries from './data/weaponseries.json';\r\nimport Fort from './data/fort.json';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"Noto Sans SC\", sans-serif ',\r\n  }\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={0}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst direction = 'ltr';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [idx, setIdx] = useState(parseInt(localStorage.getItem('dl-collection-tab')) || 0);\r\n  const handleTabs = (e, newIdx) => {\r\n    setIdx(newIdx);\r\n    localStorage.setItem('dl-collection-tab', newIdx);\r\n  };\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem('dl-collection-locale') || 'EN');\r\n  const nextLocale = (e) => {\r\n    switch (locale) {\r\n      case 'EN':\r\n        localStorage.setItem('dl-collection-locale', 'JP');\r\n        setLocale('JP');\r\n        break;\r\n      case 'JP':\r\n        localStorage.setItem('dl-collection-locale', 'CN');\r\n        setLocale('CN');\r\n        break;\r\n      case 'CN':\r\n      default:\r\n        localStorage.setItem('dl-collection-locale', 'EN');\r\n        setLocale('EN');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar disableGutters={true}>\r\n          <IconButton onClick={nextLocale} color=\"primary\"><Box fontFamily=\"monospace\">{locale}</Box></IconButton>\r\n          <Tabs\r\n            value={idx}\r\n            onChange={handleTabs}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            style={{ margin: 'auto', width: '100%' }}\r\n          >\r\n            <Tab label={TextLabel[locale].ADVENTURERS} {...a11yProps(0)} />\r\n            <Tab label={TextLabel[locale].DRAGONS} {...a11yProps(1)} />\r\n            <Tab label={TextLabel[locale].AMULETS} {...a11yProps(2)} />\r\n            <Tab label={TextLabel[locale].WEAPONS} {...a11yProps(3)} />\r\n            <Tab label={TextLabel[locale].FACILITY} {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={idx} index={0} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Chara}\r\n          availabilities={Availabilities.Chara}\r\n          storeKey={'chara'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'byMC']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={CharaListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={1} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Dragon}\r\n          availabilities={Availabilities.Dragon}\r\n          storeKey={'dragon'}\r\n          minRarity={3}\r\n          maxRarity={5}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byRarity']}\r\n          radioFilters={['Element', 'Rarity']}\r\n          ItemComponent={DragonListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={2} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Amulet}\r\n          availabilities={Availabilities.Amulet}\r\n          storeKey={'amulet'}\r\n          // cardIconFn={amuletCardIcon}\r\n          minRarity={1}\r\n          maxRarity={3}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byRarity']}\r\n          radioFilters={['Form', 'Union']}\r\n          ItemComponent={AmuletListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={3} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Weapon}\r\n          series={WeaponSeries}\r\n          storeKey={'weapon'}\r\n          minRarity={2}\r\n          maxRarity={6}\r\n          sortOptions={['byID', 'byName', 'byElement', 'byWeapon', 'byRarity', 'bySeries']}\r\n          radioFilters={['Element', 'Weapon', 'Rarity']}\r\n          ItemComponent={WeaponListingItem}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={idx} index={4} dir={direction}>\r\n        <Listing\r\n          locale={locale}\r\n          entries={Fort}\r\n          storeKey={'fort'}\r\n          sortDefault={'byID'}\r\n          sortOptions={['byID', 'byName', 'byType']}\r\n          radioFilters={[]}\r\n          ItemComponent={FortListingItem}\r\n        />\r\n      </TabPanel>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}